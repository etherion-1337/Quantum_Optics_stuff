(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    234839,       5500]
NotebookOptionsPosition[    230416,       5368]
NotebookOutlinePosition[    230805,       5385]
CellTagsIndexPosition[    230762,       5382]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Small Photon Entangling Quantum System (SPEQS-1)", "Title",
 CellChangeTimes->{{3.6434278160607023`*^9, 3.643427817258897*^9}, {
  3.6434289634453583`*^9, 3.643428971258801*^9}, {3.6434296734311047`*^9, 
  3.643429682533263*^9}},
 FontSize->36],

Cell["\<\
Sellmeier Equations for BBO (\[Lambda] in Sellmeier Equations are in \[Mu]m)\
\>", "Text",
 CellChangeTimes->{{3.643429772939912*^9, 3.643429782177997*^9}, {
  3.643430339266317*^9, 3.643430345920781*^9}, {3.644106885097384*^9, 
  3.644106920693944*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nord", "[", "\[Lambda]_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"2.7359`", "+", 
     FractionBox["0.01878`", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Lambda]"}], "-", "0.01822`"}]], "-", 
     RowBox[{"0.01354`", "\[Lambda]", " ", "\[Lambda]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"next", "[", "\[Lambda]_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"2.3753`", "+", 
     FractionBox["0.01224`", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Lambda]"}], "-", "0.01667`"}]], "-", 
     RowBox[{"0.01516`", "\[Lambda]", " ", "\[Lambda]"}]}]]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6439543640608187`*^9, 3.643954365421092*^9}, {
  3.643954455081243*^9, 3.643954490392683*^9}, {3.6439545278954268`*^9, 
  3.643954590486953*^9}, {3.6439546436628103`*^9, 3.6439546552589827`*^9}, {
  3.643954781154344*^9, 3.643954836476281*^9}, {3.644041828240353*^9, 
  3.644041917706992*^9}, {3.644042751430443*^9, 3.644042770516029*^9}, {
  3.644043390463086*^9, 3.6440434217592*^9}, {3.644043462700427*^9, 
  3.644043493881531*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell["\<\
Choice of pump and signal wavelength, gives your idler wavelength via COE \
(wavelength in \[Mu]m)\
\>", "Text",
 CellChangeTimes->{{3.644042024415613*^9, 3.6440421080432158`*^9}, {
  3.644042221000635*^9, 3.64404224411823*^9}, {3.644107028483637*^9, 
  3.644107051409402*^9}, {3.644107535223743*^9, 3.644107578543729*^9}, {
  3.644107763392304*^9, 3.644107826445957*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]p", "=", "0.405"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]s", "=", "0.760"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]i", "=", 
  FractionBox[
   RowBox[{"\[Lambda]s", "*", "\[Lambda]p"}], 
   RowBox[{"\[Lambda]s", "-", "\[Lambda]p"}]]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQLeh2qaFU7bVj2BGN9SDajY3hGog+oiYFpg8cPHwX
zGdmfwyiZ/1lfQGiV8a8gtCV+z6B6Ec2/j9BtC2vOXcZyLw1djwgelpZrjiI
frF0AZhmK5qjAKazvIxAdMusl2Yg+k/tRAsQfc3DqmgykDYUv1cFohNksnmn
AOm8c2sVQXSFZo4aiHa61QGmwyZO1QbR5/4Z64Hom2x7boJoI7fzb0G01IZ1
H0H0r86g7yDa7lTjHxA9NWTDPxC9ilkieiqQvvK1B0yXpgV1eRm+duxgUO4G
0RX9EbtBtGqr/kEQ3eAhfgZEhyV0gmkAjcWWsQ==
  "],
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData["0.8670422535211268`"], "Output",
 CellChangeTimes->{
  3.644042633954604*^9, {3.6440427397068853`*^9, 3.6440427583019943`*^9}, 
   3.644042935304555*^9, 3.644043037299204*^9, {3.6440430810035667`*^9, 
   3.6440431407782183`*^9}, 3.644043214762362*^9, {3.6440433632616463`*^9, 
   3.644043368675334*^9}, {3.644043440966069*^9, 3.644043497859199*^9}, 
   3.644043671370872*^9, {3.644043704093194*^9, 3.644043717861169*^9}, 
   3.644103660358508*^9, {3.644104940274994*^9, 3.644104974901752*^9}, 
   3.644105013330228*^9, {3.6441050621465816`*^9, 3.6441050746713753`*^9}, {
   3.64410656328721*^9, 3.6441065776549473`*^9}, 3.6441066112613773`*^9, 
   3.644106684679315*^9, {3.6441067348077087`*^9, 3.644106745046118*^9}, 
   3.644107497130229*^9, 3.644117549168536*^9, 3.644117911681406*^9, 
   3.644300634530116*^9, {3.649721941327242*^9, 3.649721957401816*^9}, 
   3.6497320829144697`*^9, 3.649737602205319*^9, 3.6508425629759827`*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell["\<\
Defining BBO refractive index for pump, signal and idler for ordinary and \
extraordinary optical axis.\
\>", "Text",
 CellChangeTimes->{{3.644107386958189*^9, 3.644107430987343*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nop", "=", 
   RowBox[{"nord", "[", "\[Lambda]p", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nep", "=", 
   RowBox[{"next", "[", "\[Lambda]p", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nos", "=", 
   RowBox[{"nord", "[", "\[Lambda]s", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nes", "=", 
   RowBox[{"next", "[", "\[Lambda]s", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"noi", "=", 
   RowBox[{"nord", "[", "\[Lambda]i", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nei", "=", 
   RowBox[{"next", "[", "\[Lambda]i", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6441074397809563`*^9, 3.644107465526792*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[{
 "For Phase-Matching conditions, since BBO is negative uniaxial crystal, the \
requirement is nep*\[Omega]p=nos*\[Omega]s+noi*\[Omega]i,\nand since \
extraordinary refractive index is a function of tuning angle in addition to \
wavelength ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"ne", "(", "\[Theta]", ")"}]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{"sin\[Theta]", "^", "2"}], 
      RowBox[{"ne", "^", "2"}]], "+", 
     FractionBox[
      RowBox[{"cos\[Theta]", "^", "2"}], 
      RowBox[{"no", "^", "2"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we can find the tuning angle \[Theta] once we fixed the wavelength of \
pump, signal and idler."
}], "Text",
 CellChangeTimes->{{3.644114937901029*^9, 3.644115249533424*^9}}],

Cell["\<\
Calculating phase-matching angle for collinear Type-I SPDC, assuming \
monochromatic light and infinitely large crystal aperture.\
\>", "Text",
 CellChangeTimes->{{3.644107064825871*^9, 3.644107087497109*^9}, {
  3.644107228235053*^9, 3.6441072705690107`*^9}, {3.6441149577334948`*^9, 
  3.6441149589336567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Theta]", "=", 
  RowBox[{
   RowBox[{"ArcCos", "[", 
    SqrtBox[
     FractionBox[
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"nep", "^", "2"}], "*", 
         RowBox[{"nop", "^", "2"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["nos", "\[Lambda]s"], "+", 
            FractionBox["noi", "\[Lambda]i"]}], ")"}], "^", "2"}], "*", 
         RowBox[{"\[Lambda]p", "^", "2"}]}]], "-", 
       RowBox[{"nop", "^", "2"}]}], 
      RowBox[{
       RowBox[{"nep", "^", "2"}], "-", 
       RowBox[{"nop", "^", "2"}]}]]], "]"}], "*", 
   RowBox[{"180", "/", "\[Pi]"}]}]}]], "Input",
 CellChangeTimes->{3.644107475645845*^9},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData["28.759141117601168`"], "Output",
 CellChangeTimes->{3.644107501873149*^9, 3.6441175535430613`*^9, 
  3.644117921044201*^9, 3.64430063900804*^9, 3.6497219628019533`*^9, 
  3.64973208744946*^9, 3.64973760702722*^9, 3.650842569341608*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"thetafinder", "[", "incre_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "theta", ",", "\[Lambda]p", ",", "\[Lambda]s", ",", "\[Lambda]i", ",", 
      "nop", ",", "nep", ",", "nos", ",", "nes", ",", "noi", ",", "nei"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"\[Lambda]p", "=", "0.405`"}], ";", 
     RowBox[{"\[Lambda]s", "=", 
      RowBox[{"0.5`", "\[InvisibleSpace]", "+", 
       RowBox[{"incre", " ", "0.0005`"}]}]}], ";", 
     RowBox[{"\[Lambda]i", "=", 
      FractionBox[
       RowBox[{"\[Lambda]s", " ", "\[Lambda]p"}], 
       RowBox[{"\[Lambda]s", "-", "\[Lambda]p"}]]}], ";", 
     RowBox[{"nop", "=", 
      RowBox[{"nord", "[", "\[Lambda]p", "]"}]}], ";", 
     RowBox[{"nep", "=", 
      RowBox[{"next", "[", "\[Lambda]p", "]"}]}], ";", 
     RowBox[{"nos", "=", 
      RowBox[{"nord", "[", "\[Lambda]s", "]"}]}], ";", 
     RowBox[{"nes", "=", 
      RowBox[{"next", "[", "\[Lambda]s", "]"}]}], ";", 
     RowBox[{"noi", "=", 
      RowBox[{"nord", "[", "\[Lambda]i", "]"}]}], ";", 
     RowBox[{"nei", "=", 
      RowBox[{"next", "[", "\[Lambda]i", "]"}]}], ";", 
     RowBox[{"theta", "=", 
      RowBox[{
       RowBox[{"ArcCos", "[", 
        SqrtBox[
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"nep", "^", "2"}], "*", 
             RowBox[{"nop", "^", "2"}]}], 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                FractionBox["nos", "\[Lambda]s"], "+", 
                FractionBox["noi", "\[Lambda]i"]}], ")"}], "^", "2"}], "*", 
             RowBox[{"\[Lambda]p", "^", "2"}]}]], "-", 
           RowBox[{"nop", "^", "2"}]}], 
          RowBox[{
           RowBox[{"nep", "^", "2"}], "-", 
           RowBox[{"nop", "^", "2"}]}]]], "]"}], "*", 
       RowBox[{"180", "/", "\[Pi]"}]}]}], ";", 
     RowBox[{"Return", "[", "theta", "]"}], ";"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"WAVELENGTHLIMIT", "=", "1300"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"thetalist", ",", "index"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"thetalist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "WAVELENGTHLIMIT"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"index", "=", "1"}], ",", 
    RowBox[{"index", "<", 
     RowBox[{"WAVELENGTHLIMIT", "+", "1"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
      "thetalist", "\[LeftDoubleBracket]", "index", "\[RightDoubleBracket]"}],
       "=", 
      RowBox[{"thetafinder", "[", "index", "]"}]}], ";", 
     RowBox[{"index", "++"}], ";"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DataTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5`", "\[InvisibleSpace]", "+", 
        RowBox[{"i", " ", "0.0005`"}]}], ",", 
       RowBox[{
       "thetalist", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "WAVELENGTHLIMIT"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"DataTable", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Wavelength", " ", "\[Mu]"}], ",", 
      RowBox[{"Angle", " ", "deg"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.644300697476358*^9, 3.644300736930997*^9}, 
   3.6497320704882317`*^9},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
12Bjv+wRwwrJcw0814/+6lRInvP7NyC1TqtC8lyD28vuB1UqJM81eHM8bK+6
gDznf/5UB624gDzXQKWOSo4tIM81OLfzc9WLBeS5Bi2znBJ2FZDnGgTec5Au
KiDPNfgWPmWbdwF5rkGt8+zBPgXkOX9/lWfWblZAnvPxmD/4z7d88pwfr1mw
4H0+ec6vp2ay+5N88lyDofeDT1/IJ8/5/c8In7k9nzzXoGdUjfOz8slzDe5t
GDxucD55rsG0W7nb2uWT5xpMn9m786888lyDt730g9/nkecarEbgqwof/3mu
wRrRSumpPPJcg3rj+i1bnUee8+dpsPdK7zzyXIPuwxl9tzzyXIMbA7coquSR
5/zPzz84/fP/PdeA/zg4Ki6XPOfj9USthKBc8lyLbaWrry/JJc+1KPM718A9
lzzX4rzqd1nrXPJci9d2LWZacshzLXoPnz0kO4c81+JqZZ8bl3LIcy1SLy06
vD6HPOevX9LKMiKHPNciZ17R2w455LkW0xS93b5mk+dajPq9xyErmzzXwj95
YkhoNnmuxbIXzfevyCbPtRi5EuVcNnmuRVdfD0vjbPp8rsW4PxeWy7LIcy2C
2aTlj7LIcy3szrcu2ZNFnmsxpZ/9n4lZ5LkWLSMnH7PNIs+1qO3Z4cbXTPJc
C/1bk0dqJnmu/X+9+s9zLba03NLaN5M859drZotxPTPJcy1+pu1u+CODPNfi
d+P+U9MzyHMtvK6edgjKIM+1cFjSav+MDPJcixZfe620zyDPtfBd4FFsTifP
tVDsyP2ckE6ea1H3rNOiPenkuRbR14q2jU4nz/n16+3VsUU6ea5F/Nx3Y4rS
yHMtflT+XfdGGnmuResVHaesSCPP+fe/fK/PgDTyXAuPvs3PlaeS51rsnJoc
9CyVPNfii6pZq32p5LkWlrG7e49KJc+1kF9e97ZhKnmuxdq9Yxu9TiHPtdjg
HfAhJIU812K2ZOWgGSnkuRYrnu+27ZBCnvPr79HtevEz8lwLrm5K/NVn5LkW
XU7Ez674PPfPcy1cFOtD7Z6R51rYx89conxKnmuxZuZ/+TeekudapGV6Zix8
Sp5r0fB4iwn2T8lzLU6ab25UJJPn/HnM8esTnkyea5F+4XrA3GTyXItOJz4s
6pRMnmvxYc085eck8pyPv6hrv0OTyHMdPvj9jZiSRJ7rkOz2n6VpEnmuQ5vo
oy/EieS5DjEJ+0YeTiTPdZhcr+us4YnkuQ5Xf6fVrvz/z+c62B/MHffkCXmu
g3JKSL8NT8hzHXJiD0U5PSHP+flcqJatSiDPdWh4e/62KwnkuQ5/bOsUTE0g
z3VYVmViQqME8lwH16IrHtmPyXMdRtuMXb7zMXmuw9vJiX0HPSbPdZgaODxY
H0+e67A4c2TI1XjyXIcjre1dpsaT5zr0ajPQv348ea6DrunrKalx5LkOmr++
bzfGkec62Ab2/e4QR57rcF9/I64oljznXz+kTeuTseS5Dh69lW2HxZLnOhQ0
WvDsewx5rkPbEnONiBjyXIexR2WmGTHkuQ6DR53ZWj+GPNchy2NuRPIj8lyH
z+5Xtq16RJ7r/v/7qH+e67Cr+FW95w/Jcx28dm/O2/mQPOf3u5/FqfdD8lwH
zuGkc9ED8lyHn9MeKo48IM91SPK7I2IfkOc6PDj5vL8mmjzX4WCp/+sz0eS5
Do258rYe0eQ5Py66XcdynzzXYa/505WL98lzHRaMUBeNuE+e6xCwulNGWRR5
rkPplfcTwqLIcx0a5C067B1Fnuuw9XSH5d/vkec6fJ8y/lvYPfJchzK7CQ7e
98hzHeakb6z17S55zp+HqAYnLt8lz3Wo1nZFutdd8lyHaybZVUskea5DXGG6
Y2gkec5fr+Gcue6R5LkOA1Jre2jvkOd8vN9t+PLEHfJch80+afVEd8hzHe6q
1pd+iSDPdcj0XX9wXwR5rkOEX+N8xwjyXI+f484nvrxNnutRz3vODP/b5Lke
l7o/uNX+Nnmux6yNn8JTb5HneqQGOI1bdIs81+OG97eIurfIcz2WhwbGRN0k
z/WIV7RfPeEmea7n649WH7/dIM/1KKqT/O3cDfJcj9i9M9Jcb5DnetR1Gzzk
y3XyXI+ec6JWB14nz/XYkP9nfNfr5LkepV3WK9LDyXM9klNn9VzIjz9bPddD
llndtub/f9+ux/VaceKb18hzPWw7Jjp5XaPft+sx1W/2EPVV8lwP/y/amgeu
kud62K+6tavbVfKcX58wSXRmGHmux7asL8ELwshzPY6YdU7VwshzPf4axmy/
eoU816NwzPhAtyvkuR7V5rNs0WXynJ8PJt3Zepk812PfPeWLVpfJcz1yPJ2j
Yi6R53o+5xwb6nOJPNfjc9X+x40XyXN+PZosP3noInmuR9MuAaPtL5Ln/HyO
xDxLuUCe6xG6ykc/8wJ5rsfZiAvPv58nz/VI/PJ+xcnz5LkejTeMTXc8T57r
ITnp/jozlDzXo7L9j4t+oeS5HjuLHnUuP0ee8/fbJ2n2qXPkuR4BEyZNdTxH
nusxZ1hK3Yyz5Dl//UyPLbPOkud69PDtGl4WQp7r8X7ylYNHQ8hzPZiUvw52
IeS5Hl3WBx5IPEOe8+tVZ9nVCWfIc/79VX/8tcHkuR6Z/bbVCwwmz/U4/6Hb
rJbB5LkenU+7L7t7mjzX49PH+s5DT5PnegSX5j57d4o81+OMOqHWylPkuR71
D3VoWPUUec6/fs2g1yEnyXM+/qoMnep4kjw3oM38PeefnSDPDXhxkLk08QR5
bkBVp+t+6iDy3IDBr6rKtgaR5wY8zAi2axhEnhvwvE1o96vHyXMDmkaP1Q84
Tp4b0Kdv2eqsY+S5ASPr5cROO0aeGyDZUTtZd5Q8NyD5WOm+7UfJcwMO18tu
3PAoeW7AwFMpvleOkOcGuB3osLLvEfLcgKft2rmlHibPDfD1/v7a5zB5boB3
kd5Rdog8N+DGApHXukPkOT8/t9bdqh4izw0IPZedc/IgeW7A/kW7+3Q5SJ4b
MGzF3hnRB8hzAyoxdUa5HSDPDTD0GG0j3k+eG9Br4UH/WfvJcwNfD/6M1e0j
z/n5LHmfsHkfeW5A+Z65e2ruI88N+Hla3DR4L3luwOvM6Uu67CXP+fk0w96o
PeQ5vx7DHi5y3UOeGxBc8rVRzm7ynN/vAFHgpP///zk/7pIUL9lFnhvg9Cku
bsUu8tyAHgFzd/wMJM8NYO+X1dsbSJ4bEPXp9rxGgeS5AUeGx+06H0CeG1D0
Z9JS+wDy3IAEWVKb6J3kuQGdbtmfZneS5wYsz8/6L2MHeW7Ax7B30rE7yHN+
fUYGxb/fTp4bMDHBbuq87eS5AYsfiVP028hzA1oUppdt2EaeG7B7JVv6dyt5
bkCHwiVJ+7eS5wbU+LZ3fKOt5LkBG1Iz7p/dQp7z9yPx/dhpC3luQMyrfS9u
bSbPDcjVrj3VZzN5boCt99TO8f7kOf9907KtnD95bkC3K9KwzE3kuQH9fplP
j95EnhuQsSZv4uuN5Dl/f143JNM3kucGFJyJYSUbyHMjYrx6zVu0gTznx+2H
TDWsJ8+NeHzLtu269eS5EY186kb+WEeeG7F3Uve6O9aR50ZsTrvnUnUdeW7E
/MAXAw6sJc+N+OyVZlN/LXluxNLbsedOrCHPjdhSo6hKizXkuRHR55axoavJ
cyOqrT0xtMNq8tyI8nWBba+uIs+NUExdkWa3ijw3wjV6H3t7JXluxEDZ392O
K8lzI/r2rHkxagV5bsSo88/39VtBnhtRq/2RITHLyXMjZKuWFjjz4/3WBG1E
uMMFh4Rl5LkR6xLGT3NdRp4b0XT+k2nJS8lzI6YNre3otpQ8N2LEqGXPU5aQ
50ZIhzf2HLqEPDdi8DuHoPTF5LkRiZtVd4YtJs+NOLV9Y2jmIvLciG4Nas70
XESeG8H2yjZnLSTPjRgZq57qtZA8N8J7Vsjp7AXkuRFd71YJ91pAnhtRUHfa
/uz55Dn//rHZ8JpPnvPrn74zN2seeW5EvH2kg+c88tyIede3zs6cS54bMVne
dsmwueS5EQ5+CZ7pc8hzI2at2vPLfQ55bsQE95t7UvzIcyOCZGNlnB95bsQ7
5zstk2eT50ZU/avo7DqbPDfCSexYJcGXPDfCp1NkvLMveW7EUC5oWMws8tyI
oknVb/ebRZ4b4bnEWRY1kzw3YuFUn1LHmeQ5v79fAj/dnkGe8/M9aTlv//+/
hzNikCK/37Xp5LkRclsurON08twI+y3rVOenkef8emtPV281jTw3YteUwl+n
ppLnRvzdPjK34VTy3Ihe3/uvOTyFPOfjXxRjrjGFPDeh7dkfXrsm03k3oceQ
7lv+TCLfTTC7rdzjP4nOvwn7A0oXfZ1I3ptQI0Nuu3Ii5QMT5j9Y/EQ9gfw3
YVf27Z7zJlB+MKHaghcbPvtQPWDCu9RaoVN8KF+YsO2X/9kX46k+MOFvtVFr
Ro2n/GEC8+imbcY4qhdMcHwS9wDjKJ+YIIu41jZ+LNUPJjywnJrddyzlFxO+
fLq/I2IM1RMmHDvbZXPXMZRvTOji1HjshdFUX5hQZ394peajKf+YkLm02rGj
3lRvmHAjYOr36t6Uj0yIH53tumMU1R8mqAdt9f02kvKTCWsDzs5cOZLqEROW
jfF0Vo6gv/cxYbLw96L/6hMT6s0t2/XGi/KXCb1Gu5d6e1G9YkJkjUT3dE/K
ZyZ4Nj64kvWk+sUEVaF404Ph9P+JJhzcFevbYzjVMyZwY+Z1vTKMfh/J3/+g
3xkthlF9Y0JA+5vDj3pQ/jNhb/bB61U9qN4xIe5TjnTzUMqHJqz+cuSvyZ3q
HxNGu/z4scCdfn9pQp5T35cfh1A9xO+vbuah8UPo848Jy7dc6ZzlRvWRCeUZ
nc66ulH+NCH/fBVjNEf1kgnREUu7duMon5qg2bXd5QKofuLjNWR2r8ag/GpC
fdeBVfYNpnrKhAE3u8SVu1K+NaG/ZZT3Kleqr0wY0exNioyl/GtCgUHScipL
9Ra/foPPjMn//98n8/d3rflCN4bqLxMG3tjt+0hE+dmEqpFVXbqLqB4zQfE3
vuS8C+Vrfr/zM481dKH6zIQZXcfV2+1M+ZuPr++bln0bRPUaH78d50QuGUT5
3IRrE53EnwZS/cavb/8qr8cOpPxuwgLYPEkdQPUcf77feu4ZOIDyvQl7vP72
vtWf6jsTOid6JLfpT/nfhCrug3sf7Uf1Hn/+CmvvtulHHvDx4pL/eE1fqv9M
SHe98UrWh3zgz+/Wx88n9aF60ASjf7forN7kBZ8/LjXeIOpN9aEJd0Tn2t1x
Ij9M8N3+5WY7J6oXTTgUUL3lsV7kiQndOcelNr2ofjTBLnR92GpH8sWEoCk2
SZKeVE/y56WLIdGnJ3ljwqfDvmFpDlRfmrCl1vqlAxzIHxNalo5udb0H1Zsm
sMfr3WnegzwyoczmeZd93an+NGGST/zOb93IJxNyNylSFnajetSEBl6bNP/Z
k1cmHAg4+m24PdWnJuxO99TE2pFfJpguZqTY21G9asKmbfYBZ2zJMxN0MQdt
a9hS/WrC7f0NojZ0Jd9M6NDsdUdFF6pn+fM7/+fGiV3IOxM6Lr34KK0z1bcm
RJUXvevXmfwz4cPrT7KwTlTvmrDuQsybRp3IQxOaF+2/t7Mj1b98vNZdu9LY
gXw0YefOk81ndaB62ITrW2qG57UnL02Ya2dqzbSn+ph//fFFm261Iz/5/BJ9
LLFFO6qXTeizeJdmT1vy1IT22/z+lrSh+pmfT+jwX35tyFcTnKb5FBe2pnra
hInOYXddW5O3JjQOHTcvohXV1ybcFG+v3KoV+cvn0wbDD+xtSfU2P58Nmd9L
WpDHJmTUaTfOrwXV33z8Jc07UdCcfObjY37CE6Y51eMm/EhxFd9sRl7z52Fb
zfxmzag+N+F1N+cHgU3Jb/48uqoDjU2oXjdB1N6ZndGEPDfjSku3oqzG5LkZ
p2Z3XDagMXluRnZTi+RKI/LcjAXsC/f6jchzM2pmfTy6uSF5bka9IMc0RQPy
3Ix5079Ixzcgz81Y87KhIak+eW7G+mPvJT3qk+dm9G4wNSW4HnluxqInNw5X
rkeem+GvKXZbUZc8N2PTm86Sd3XIczPu39iz3KMOeW7G+xW2sqja5LkZz+3b
DWtbmzw3Qxqz7+S+WuS5GSN0O/IsNclzM2YHdDTPrEmem7G29e5K2TXIc349
hqX/7leDPDcjZdsf+cXq5Dk/364jHteqTp7z670/ZfO6auS5GTukAfZFVenz
hxnclLCnXlXJczNcylyHPaxCnpuxPWZFXPsq5LkZZdtGtzhQmTw343Kbb3NK
KpHn/HhEYOjMSuS5GSFRtZ5l2pDnZhwsuv6yjw15bkYzn7UvQ/9S/54ZE9fu
f1rtL/Xrmv/f//XPczM6fTXPefeb+nfNyEvc1NL9N/X3mXGxRmTCnV+M4Dm/
ni9vjGr+i/r9zLBpEJi7o5z6e81wPzXBWf2T+v/M2NjN+eT4n9Tva0bmNo+P
CT+oH5Df/z6nm9j+oP5fM6bkw+Xod+oPNEOdOdP72zdG8NyMlrtqjJ39jfoF
zUj1nuiWXUb9wWZUn+vbqW8Z9Q+aYatxNZ0rpX5hM659q3m3Sin1E5qRdejt
tGVfqX/YDM9TaWWvSqi/0IxXGlmAKz/+57mZ/3w77le4hfoNzRh4qNOC+hbq
LzbjSbflyRvM1H9oRmziyJpFJuo3NiMx9RU33ET9iGasu9ph8T0j9R+b0eu+
e0ALI/Un8mOnKQd2GBjBczNaeK8LUOqpX9EMi929xWP01J9sRnhmhyGxOupf
NGOm3afaHXTUr8xfr9uf1L1a6mc0w+7y2eUGDfUv8/sxOqPGpP/3N/Lno/jc
iUQ1I3huht9Xx/q2aup3NGNGo+DNh1XU38yf/yj1fyVK6n/k5zcAdtOV1O/M
x0fZnfkpCuqH5M97X6/g7grqfzbjb+seccfljOC5Gea8+bnfZIzguRmNJjYW
z5JRv6QZbSM9MtKl1B/Nn8ekZnd7Sql/0oy+s0P2nZRQvzSfLyZLx/8spn5K
M05PrdvQr5j6p81Ir9E9OfMLI3huRs7X0bN78eN/nvP7e+lkyaki6rc0w35T
Xf/yz9RfbcbCDwUmv8/Uf8nn0+amaVmfqN/ajONz98T2+kT9mGbMMlytfvoj
9V+bUV8827P8AyN4boai4fOtfvz4n+dmLL9Z61rme0bwnI+nbR2SHN9TfzYf
jwvtc0++YwTPzajdY2Duj7fUr23G6M2zk3z58T/PzRjy+/G19P+of5uPj2HT
tjvw43+em/Hrv/Ejg94wgue8L7bxdb69ZgTPzTgQdCV5xmvq7zZj8vKOC1Ne
MYLnZkwr96rc7RX1e/PzX9Y36MhLRvDcjFsSfZOSF9T/bUbzlccPTuHH/zzn
80/jXqWJz6kf3IyrSe99uvDjf56bsWfC7ev7xdQfbsbh8Ci9vpARPOfz+ZpK
3X0KqV/cjNUroqbEFdDzIfj4dHm+tV0B9Y/zXi7ceDownxE85/Pv5pgwZR71
k/P5R37l2qg8en6EGa9re4fez6X+cjMCkbu3eS49T8KM85lOC7fkUL85n4/f
HmG/ZNPzJfjzeeZ7dY9s6j+34EXrXRm3shjBcwuyFnNb6mdRP7oFSVvdbddm
0vMnLDjLXEr7L4P60y0w7lwwlc2g51FYMKD5HenldOpXt8AcGzi3Wjo9n8KC
tY1/v12cRv3rFjimOg4tSGUEzy2YM9U+vG8q9bNb4DPhV3lwCj2/woJqdsme
5c+ov92C+b0DD/k+o+dZWHA6c3Ja6lPqd7fAr/f4Evun9HwLC2zCdrU8nEz9
7xY8cv/Tz5TECJ5bsNHplceEJOqHt/y///2f5xYMqvJ+VNtE6o+34PdrxyE7
n9DzMPhxVtdesgTql+fXJ1Lc0DOBno9hQW9Pd03EY+qft2CU99HHDfjxP88t
2DMvNWBtPPXTW1DV/iv+i6PnZ/D70aFvqSiO+ustSMs9euViLD1PwwLuXBuP
yrHUb29BoU5dND+GETy3IKR5nTXZj6j/3oKyGcfLez6i521Y0Oz7wa3HH5Ln
FhQ0qlta8oA8t8A5o+v8yQ/IcwtsbRV5j6PJcwuO9fLr2T6aPLdg8JvruwLu
k+cWRFfOeiGLIs8taHr4dSvPKPKcjz/XL1Mi7pHnFsx7/f1Y/XvkuQXaKr2T
V98lzy24uTRY8SqSPLfgVRhb3TmSPLdgeN9+7UPvkOcWNDh9sNefCPLcgp8u
PoP8IshzC/QBF5zTbpPnFrx+6t/Xnh//D4QUjwY=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     RowBox[{"\[Mu]", " ", "Wavelength"}], TraditionalForm], 
    FormBox[
     RowBox[{"Angle", " ", "deg"}], TraditionalForm]},
  AxesOrigin->{0.49035156249999995`, 25.391471435700772`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.5005, 1.15}, {25.55453743575717, 28.815857436885086`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.649732121378319*^9, 3.649737609296898*^9, 
  3.6508425717082157`*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
0cgP2KC/RBs9enT4mXTv3t3MnTvX9SahSl588UXTtm3bILZSr7zvvvvqXI78
QFKM6+pCPPxEXHUhHv7ifEgX4oEco56VEvmvC/GADfoLEI38gA36S92uvPLK
8PPYfvvtzbx581xvEqrs5ZdfDu65kxg3btzY/OY3v9liGfIDSTGu60bpM98c
8fATcdWFePiL8yFdiAdyjHpWSuS/LsQDNugvQDTyAzboL1u68847w89ip512
Mh9//LHrTUJG3nzzTdOpU6ewpvXMM89s8nvyA0kxrusG9axiIa66EA9/cT6k
C/FAjlHPSon814V4wAb9BYhGfsAG/WVTTzzxRDhfVo8ePcySJUtcbxIy9tZb
b5nWrVsHMW/Tpo2ZOXNm+DvyA0kxrqsL8fATcXWDunHxcD6kC/FAjlHPSon8
14V4wAb9BYhGfsAG/eX/mTVrVlDPkM+gVatWwb07KIann346rGP27NnT/OMf
/wh+Tn4gKcZ1dSEefiKublDPKh7Oh3QhHsgx6lkpkf+6EA/YoL+gqMr7fBTy
AzboL//y1VdfBc8WlP1v0KCBefDBB11vEqokznFTjB07NlzukEMOMRs2bCA/
kBjjuroQDz8RV12Ih784H9KFeCDHqGelRP7rQjxgg/6CoqKehWqjv/zLueee
G+7/6NGjXW8OqihuPWvjxo1myJAh4bLXX389+YHEbMd1n3/+eXPiiSearl27
mqZNm5qOHTuaQYMGmcmTJ2e2jatWrTI33HCDOeCAA8zWW29tmjRpYjp37myO
Ouooc88995h169alen8X+8R9I8VCXHUhHv7ifKj2Kp27Eg/kGPWslMh/XYgH
bNBfUFTUs1Bt9BdjXnjhheCeLNn3Pffc06xZs8b1JqGK4tazxLJly0y3bt2C
ZZs3b25OP/30wucHkok7rrt+/fpN6ul1tcGDB5vVq1dXdfuWL19udt9994rr
3Xfffc2XX35p/d6u9klQzyoW4qoL8fAX3xdqj3oWPEU9KyXyXxfiARv0FyAa
+QEbRe8vcv/BbrvtFuy3zJ/01ltvud4kOPa73/0uzIUdd9yx0PmB5OKO644a
NSpYZttttzU33XST+fDDD83atWvNkiVLzN133226d+8e/P6MM86o6vaNGDEi
eN/+/fub5557zqxYsSI4Hsp6J06cGNynJb+/7LLLrN/b1T4J6lnFYhvXJ554
whxzzDGmU6dO4f2Ixx57bPDzrGR9H6SLfSLPiqfo3xe0IR7IMepZKZH/uhAP
2KC/ANHID9goen+58847w/0+66yzXG8OlDjooIMi7yspUn4guTjjuu+++25w
b6iMP7///vt1LvPJJ58Ez+uT93n99dertn0dOnQI3vPjjz+u8/evvvpq8Psd
dtjB6n1d7pNgnL1Y4sZV7ruWZ19Wumfw5JNPNl9//XVVty/L+yBd7ZMgz4qn
6N8XtCEeyDHqWSmR/7oQD9igvwDRyA/YKHJ/kTGeHj16BPvcsmVL8/e//931
JkGJN954I3wGZVHzA+nEGde99NJLg9/LPUuVyD0cspzcU1UtrVq1Ct7zxRdf
rNp7Cpf7JBhnL5a4cS09O7ZFixZm7NixZsGCBUE96IMPPjBXXnll8HzZLK5r
yfI+SFf7JMiz4iny9wWNiAdyjHpWSuS/LsQDNugv7smzM2699VZz6KGHBtf4
lp5vcdhhhwU/z+JawChyLfAll1xi9thjD9OmTZtgznG57veQQw4x1157rfn8
88+rsh4N+1ze56OQH7BR5P7ym9/8JtznCy+8MPP1yRjWvffeawYNGmS6dOkS
HKvkWDJw4EBz/fXXm5UrV2a+DSW1Om5q2Oc4x826yDZTz0JSccZ1BwwYEPz+
008/rfhecg+VLNe3b9+qbZ+cu8h7NmvWzAwfPtw8+OCDwRh7Wi73STDOXixx
4jp9+vTg93LePnXq1DqXkXk0GzduHCwny1dLVvdButwnQZ4Vj833BZ7rWR2V
zl2L/P0NuUc9KyXyXxfiARv0F7f+8pe/mJ49e9Y5zldqvXr1qsk8NOPGjQu/
q0U1mb/hySefTLUeLftMPQvVVuT+Is/4kf1t2LBhcD1zlubNm7fJOE9dTepJ
06ZNy3Q7RK2Om1r2OWk969lnn6WehcTijOu2a9euYn5s3mSMrlpkfFvu69h8
HX369AnuKXnkkUcS1Ztd7pNgnL1Y4sT1vPPOC35/wQUXVHyvkSNHBsvl4T5I
l/skyLPiifN9ged6Vlelc9cif39D7lHPSon814V4wAb9xR2p18i1/HHGKFq3
bm1mz56d2bZMmTIl9niJXH8sY6tJaNrnOOOy5AdsFLW//O1vfwv39+CDD850
XfIMoPbt28c6hsjzgWbMmJHZttTquKlpn+McN+uyYcMG07Zt20LmB9KLM65b
X1158ya192p65513zJAhQ+qsa0mT/i/Xu9twvU9Ruc44u5/ixHW33XYLfv/K
K69UfC/5vSwn71ktWd0H6XKfBHlWPHG+L/Bcz+qqdO5a1O9v8AL1rJTIf12I
B2zQX9yQsb3y7yn1nddJk+fIyOuy8J3vfCdcz+GHHx48s0Ouu6rr/FXa2Wef
bb0ObfscZ1yW/ICNovYXeaZeaX9vu+22TNe1//77h+uS+55uuukm8+GHH5q1
a9cGxyqZZ6Z79+7hMnJ/xPr16zPZllocN4WmfU5azxIyNlLE/EB6ccZ1S/XS
aj3fM6nVq1cH9yNefvnlwTNHN69v/epXv4r9Xq73iXH2YokTV/kbJL+XMe5K
5PelOm61ZHUfpMt9EuRZ8dT3fYHnetbuuZ6iqN/f4AXqWSmR/7oQD9igv7gx
adKk8POOe14nTV6XhdIzPKR99tlndS5TOn+VJs8LtKVtn6lnodqK2l+OPPLI
cH+lzpKV559/PlyP1Inef//9Opf75JNPgmfvlZZ96KGHMtmeWhw3te1zmnrW
8ccfX8j8QHpxxnXl+hf5vVxProk8N+npp582++yzTzj2HpfrfWKcvVhs7oOs
75oJua5DlmvUqFFVtzHL+yBd7RN5Vjz1fV/guZ61e66nKOr3N3iBelZK5L8u
xAM26C9ulO63tzmvk3bqqadmsj0dO3YM1yHrq2/u8SS07TP1LFRbEfuLjP+U
niG6/fbbZ7quc845J/xc5Z6kSmS+6tKyp5xySibbU4vjprZ9TlPPOv/88wuX
H6iOOOO6pVwZNmxYjbfOmB49egTrlrH2KEuXLg2WkXH4uFzuk2CcvVjixFXm
aJPf13fPoFzjIcvJ+UEWqnkfpOt9Is+Kp77vCzzXs3bP9RRF/P4Gb1DPSon8
14V4wAb9xY2dd945/LzjntdJs7mu14aMlZT3gQYNGphddtnFnHHGGeaBBx6I
vPfAhrZ9pp6Faitif5H7hUr7etxxx2W6rn79+oXrqq92JM9JKS3bu3fvTLan
FsdNbfucpp5VxPxAdcQZ1y09y0jysNJ93ePGjQuWO/TQQ6u2faW6U6U6soy9
yzKS03G53CfBOHuxVHP+rJdeeilY7lvf+lYWm7qFNPdBut4n8qx46jsf4rme
tXuup+D8FDlGPSsl8l8X4gEb9Bc3Sud0Nud1WZzblXz00UemS5cuW/SFUpNn
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
F1xvFjbz8MMPB393S3HafffdzTvvvGP1HuQHkmJcVxfi4Sfiqgvx8BfnQ7r4
Eo8salnl92C5vuZw5MiR4XaNGjWq4rKXXHJJuOwFF1yQy/XGRD0rpVrl/7x5
8zb5u15Xk3HkadOmVX3dmytf59dff20OP/zwOrenYcOG5s4778x8e8r5cjxG
beSlv5D/cCEv+QEd6C/J/POf/zT/+Z//Gd6rJff//Md//EfseXeRnY8//tgc
c8wxYX+W5+PLHGhJrjckP5AU47q6EA8/EVddiIe/OB/SxYd4fPXVV+Y73/lO
6vpV27Ztw3uwPvjgA9e7tYnXX399k3G/9evX17mcXAPfuXPncNnp06fncr0x
Uc9KqRb5v2DBAtO+fftYOdi8efPM74soX9///b//t+L2yLjMpEmTMt2ecj4c
j1E7eegv5D9cyUN+QA/6SzryjIZ99903/OzkeXZyTaA85w61tXjxYjNixIjg
OZCleMicyPLzpMgPJMW4ri7Ew0/EVRfi4S/Oh3TJezzS1rJK92C9/PLLsebD
dWmXXXYJt3vKlCl1LvPEE0+Ey8hxNM/rjYF6Vkq1yP/9998/fO9tt93W3HTT
TebDDz8Mrg9dsmSJufvuu0337t3DZfr06RNZN62G8n2VZ57JvNg333yz+eyz
z4J5zn/729+a7bbbLlymV69ewX0ctZD34zFqKw/9hfyHK3nID+hBf0lPvkdd
d911m1zD0KlTp+BzdP2ciyJYsWJFMI+ZPCO/9Plvv/32ZsKECcGcZ2mQH0iK
cV1diIefiKsuxMNfnA/pkud4yBiTHB9s6lcyP4Y8X0jm65g7d67rXbAiz4go
7cfQoUPrXGbIkCHhMtdcc02u1xsD9ayUss7/559/PnxfuX/v/fffr3O5Tz75
JLj/r7TsQw89VLVt2Fz5vjZu3NhMnTp1i2Xk+Wgyzl1a7sEHH8xse8rl+XiM
2tPeX8h/uKQ9P6AL/aV6vvjii2Bewq233jr8LHv06BFcOyDXDaC65G+ofN7t
2rULP2+ZL+uWW26p2vUY5AeSYlxXF+LhJ+KqC/HwF+dDuuQ1Hja1rB122MGc
e+655vHHHw/u58qrhQsXBnN6yD7Jc5nkOrxy8qx6qdfJ72W5RYsW5Xq9MVDP
Sinr/D/nnHPC95X7MCq55557wmVPOeWUqm3D5sr3VbYvilzjWlrutNNOy2x7
yuX1eAw3tPcX8h8uac8P6EJ/qT6ZW0uucZN7c8uvKxw2bJiZOXOm683LPZnf
+eijjw6/o0nr1q1b8Nz8JHNkVUJ+ICnGdXUhHn4irroQD39xPqRLHuMh348q
PWNQrgeUebDk+Qp///vfXW9uVR122GHhfsr3lXK33npr+Du5B82H9daDelZK
Wed/v379wvf99NNPKy4r81aXlu3du3fVtmFz5fv64osvRi4nc8CVlqvVMzTz
eDyGO9r7C/kPl7TnB3Shv2Rn6dKlwbMe5Nl3pc9WajAyxvPkk09Wvfbis5Ur
VwbPxS1/lq+0vn37mttvvz2z6zbJDyTFuK4uxMNPxFUX4uEvzod0yVs8ou7L
2nHHHc35558fzOMk5/q+khpdaZ/lu0y5AQMGhL+bOHGiF+utB/WslLLO//Jn
n9i0tm3bVm0bNle+Hrm3MIo8L6e0nMwFUQt5Ox7DLe39hfyHS9rzA7rQX7In
czjJPUVyzWGjRo3Cz7lly5bBz+Q5GmvWrHG9merIMxrle5jci1V6HoY0eWbG
iBEjzBtvvJH5NpAfSIpxXV2Ih5+Iqy7Ew1+cD+mSp3iU17LkHP673/1uMLe8
zHVRFHLdXatWrcJYzZ8/P/i5zAVW+pnM+1Ht6/Ncrbce1LNSyjr/ZX6aJOPZ
ct1uVsrXs379+sjlZF7z0nJNmzbNbHvK5el4DPe09xfyHy5pzw/oQn+prXfe
eSf4zGWep/LPXOZaHDlypPnTn/5Utbmf8kieRfLYY48Fz7stn4dM2je+8Y3g
mbgfffRRzbaH/EBSjOvqQjz8RFx1IR7+4nxIl7zEQ+okF198sbniiiuC69Aq
jUP5Tp47X4qVfJ8Rl19+efiz4cOHe7XeCqhnpZR1/st9FqX3/fzzz6v2vmmU
76uMF0SR7S0t17Vr15psW16Ox9BBe38h/+GS9vyALvQXd+R73YUXXhjUsso/
f7kmYs899wy/+8n9Xb6SZy7KvWujR48O9rl8TqxSDUs+B6kDukB+ICnGdXUh
Hn4irroQD39xPqRLXuJR5PrV5uT7TilW8pxFscsuu4Q/k2safVpvBdSzUso6
//v06RO+73PPPVe1902jfF/ffvvtyOWmTZsWLrfXXnvVZNvycjyGDtr7C/kP
l7TnB3Shv7i3evVqM3ny5OD6uc1rW9J69eplTj/9dHPbbbcF9a08z7u1atUq
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
jQG63CfBOHuxxIkrY+21G2snz/xV6XyoXbt2W/yuUtt6662rtl1yj68822Xz
dfTp0yeo4z7yyCOJ5oFwuU+CehY8Rj0rJfJfF+IBG7XoLzJ/r4y1lT9XcODA
gZHPTkF1bdy40Tz66KPhuEhpTFWe65jFvMY+4XgKG/SXbE2ePDn8XCs9f0t+
Xv735v77789ke8rrTaecckrkcnJfbGm5Xr16xX5/bfsrqGfBhTjjujLvjfxe
5tSpRH4vy8mcdtWS1Rigy30SjLMXS5y4MtZeu7F28sxflc6Hys/n4jS5Tria
5PosmQ+irlwr/Z254YYbrN7T9T5Rz4LHqGelRP7rQjxgI+v+IuNqpfl5pe25
555mypQpVXt/xCf3az3wwAPB975SPHr37m2eeeYZ15umFsdT2KC/ZGv9+vVm
p512Cj9b+a591VVXmQULFgTztst/5d/l38HlOuo1a9Zksj3lz/iT9oMf/CB4
DtLSpUuD574uXLjQ3HfffWb77bcPl5H7Y/O6v4J6FlyIM65bGi+TvKlk3bp1
wXKNGjWq6jZmOQboap8YZy8WmzxjrL16yLPiqXQ+JH1Y/l3fvKlZk2ten332
WXP55ZebQw45ZIuc+9WvfhX7vVzvE/UseIx6Vkrkvy7EAzay6i+zZ8/eZI4s
mcP34YcfrsIWIy0Z97jppptM69atw/jI3FofffSR601Th+MpbNBfsjdjxgzT
vHnzWGNO8t076zkDf/jDH8YeA9tuu+3MokWLrN5f2/5Sz4ILccZ15Z6JOONl
n332WbBcmzZtstjUqo4But4nxtmLJU5cXY9LlxRhrJ0881el8yG5Lkn+/dxz
zzneyk3JdVpPP/202WeffYLtk+tj43K9T9Sz4DHqWSmR/7oQD9jIor+MGzdu
k/G3E044wSxevLhKW4xqmTt3rjnwwAPDOG2zzTZm0qRJrjdLFY6nsEF/qY1p
06aZrl27VqztyL2nb7/9dubbsmrVKnPsscfWW2uS+6yS1po07S/1LLhQzfmz
SvdVfutb38piU7eQZgzQ9T4xzl4sceLqelw6io9j7eSZvyqdD51zzjnBv+WZ
1rXWo0ePYN2V5oSVZxCUrqGKy+U+CepZ8Bj1rJTIf12IB2xUs7988cUXwTMg
Su/TpUuXYN4m6CVza91xxx3BNb2luEmfyPJ5VXnC8RQ26C+1I3NkyGd78MEH
B/f/Nm3aNHiu3xFHHGEmTJhQ87kBZRxt6NChZscddwzmJ5T56mVcQO59vffe
e4PnA6ahZX+pZ8GFOOO6P/7xj4PfX3DBBRXfS+ZzleXOPPPMqm1fVmOALvdJ
MM5eLHHiylh79ZFnxVPpfEjmiZN/N2jQoOJ1pnL9sCx36KGHVm27SrlQaU5Y
uS9SlunXr1/s93W5T4J6FjxGPSsl8l8X4gEb1eovr776avg9Q9qgQYOC558g
H+RZg6VrGqXtscce5r333nO9Wc5xPIUN+gsQjfxAUnHGdV977bXg902aNDFT
p06tcxn5eWmunJdffrlq25fVGKDLfRKMsxdLnLgy1l67sXbyzF/1nQ+dddZZ
wc9krjZZdtasWcG1pitWrAju2ZdrF6S/yrFf/l0t7777bnC9lKx78zlhZc7W
W265xbRv3z74/d1332313q72SVDPgseoZ6VE/utCPGCjGv3loYceCp8vKOch
l112Wb1zV0Mfuf5/+PDhYT+Q81V5hk2RcTyFDfoLEI38QFJxx3VPO+208N6M
q666Khh/k3sj5b/y79IcOyNGjKjq9mU5BuhqnwTj7MUSN66MtddmrJ0881d9
50PSp08++eQtlilvMvby29/+turbNnHixOAaikrrvvDCC63f1+U++VLPkrGa
ZcuWud4M6EI9K6W85H9REA/YSNtf7rrrLtOoUaPgdTL/0lNPPZXh1qIWJKal
74vy3KwpU6a43iRnOJ7CBv0FiEZ+IKm447oyn93xxx9fcbzs9NNPz+T5nFmN
AbrcJ8bZiyVuXBlrry7yrHjing/94Q9/COZy6NatW9Dv5Xu5zJN48cUXBzXc
rMyePducffbZwTx0cs2EPEO7Z8+e5tRTTw3qyGm42Cdf6lniiiuuCI4No0eP
Du5HTfs8c+Qe9ayU8pT/RUA8YCNNf5G/o6XXdO/e3cydOzfjrUWtyLlq27Zt
g9hKvfK+++5zvUlOcDyFDfqLbpXGqWxbHmjbX/IDSdmO6z7yyCPm+9//vunY
sWM419zgwYODsZ8sZTkG6GKfGGcvFtu4MtZeHeRZ8XA+pEve4vGTn/wk3M7O
nTsH93HL85K4d6uQqGellLf89x3xgI2k/eXKK68Ml5fv1PPmzavB1qKWZB4G
uedOYizP1/jNb37jepNqjuMpbNBfdNNW38matv0lP5AU47q6EA8/EVddiIe/
OB/SJY/xGDVq1BbbLNcgH3DAAWbs2LFmxowZZuPGjf9/e3cCLUVxL378zyar
gIBwAUFQkEQUNBBjfL4HCW4YJepTIxhATVzjQp554lM5KAExRuMT81RwA2Ik
Rj0x4o4GBDxqZBMXFEEUhCiLyM5lq/+p9kw7c+90z/Q2/euq7+ecOiF3erpr
blX9/N3+TXen3U0kj3pWRFlc/yZjPBBEmPkyadIkd9sePXqolStXVqi3qLQF
Cxaotm3bujWtl19+Oe0uVRTxFEEwX2STVt9JmrTPy/pAWJzXlYXxMBPjKgvj
YS7yIVmyOh763oN+uXuzZs3UaaedpiZOnKg+//zztLuLZFDPiiir699UjAeC
CDpfpk+f7j4vq1OnTmrNmjUV7C3SsHDhQicf0mO+//77q3feeSftLlUM8RRB
MF8Ab6wPhMV5XVkYDzMxrrIwHuYiH5Ily+NR7DqtYi137da4ceO4dsss1LMi
yvL6NxHjgSCCzJfFixc79Qy9TdOmTZ1rd2CH559/3q1j6nvUf/HFF2l3qSKI
pwiC+QJ4Y30gLM7rysJ4mIlxlYXxMFfc+VDQa+6LNWkq+Zmynp+WW9PKb1VV
VerCCy9Ujz/+uNq4cWPaHwHhUc+KKOvr3zSMB4Iod75s3brVubegfr1OnTpq
2rRpKfQWadL3Ys7NkR/96Edq7969aXcpccRTBMF8AbyxPhBWkud1TTsPWInP
w3l2M7HOysc6QxTUs0qr5GcyIT8tde/BUk3Hm5EjR6oZM2aoXbt2pf1xUD7q
WRGZsP5NwnggiHLny+WXX+6+rv9bB/vo69LPPvtsdx7ceeedaXcpccRTBMF8
AbyxPhAW59nLx3l2hMU6Kx/rDFGQD8liynhErWnlWqtWrdQ555zjPHdr9erV
aX8s+KOeFZEp698UjAeCKGe+zJw507kmS7/Wp08fVV1dnVJvkbYNGzaojh07
OnOhUaNGatmyZWl3KVHEUwTBfAG8sT4QFud1ZWE8zMS4ysJ4mIt8SBaTxiOu
mlZ+49ot0ahnRWTS+jcB44EgSs2X3bt3qyOPPNL5uX5+0sKFC1PsLSR44okn
3LkyaNCgtLuTKOIpgmC+AN5YHwiL87qyMB5mYlxlYTzMRT4ki2njcdttt8Ve
08q11q1bc+2WLNSzIjJt/Wcd44EgSs2XSZMmuT//5S9/mWJPIUm/fv3ceaGv
3zMV8RRBMF8Ab6wPhMV5XVkYDzMxrrIwHuYiH5LFxPFIsqaVa3Xr1nXu3ZS7
dkt/Dx4Vl1g9a8eOHc7Ymt769u1ba24PGDAg9X7Z2hgPWpDmN19+85vfqObN
mzs/a9CggbryyitT7y9NRhs+fLg7X/T9B9PuT1KNeEoL0pgvNJp3Y33QwrY2
bdq4c+bQQw9NvT+2N8bDzMa4ymqMh7mNfEhWM3U88r9/XInWpEmTRK/dyj9W
Jd4n7fgeEqtnbdy4saLzh0aj0Wg0Go1Go9FoNBqNRqPRaDQarZKtfv36Tj1N
Xye2aNGiWOor+fuvxPukHd8D9SwajUaj0Wg0Go1Go9FoNBqNRqPRaLQYmr6f
j352yVNPPaU2bdoUqr6Sv79KvE/a8T1Qz6LRaDQajUaj0Wg0Go1Go9FoNBqN
Rou5de7cWU2dOlXt3bs3UH0lfx+VeJ+043ugnkWj0Wg0Go1Go9FoNBqNRqPR
aDQajRax5e49OH78eLVw4UK1b9++UPWV/H1W4n3Sju+BehaNRqPRaDQajUaj
0Wg0Go1Go9FoNFqIdvjhh6uRI0eqGTNmqO3bt8dSX8nffyXeJ+34HhKrZ+3a
tUtNmzbN+DZw4MBa83fYsGGp98vWxnjQgrRi82Xo0KGqcePGzr/btGmTeh9p
ctvkyZNVvXr1nLly8MEHp96fuBvxlBakMV9oNO/G+qCFbQcddJA7Z4466qjU
+2N7YzzMbIyrrMZ4mNvIh2Q1E8djypQp6sgjj6xY/UqfOzzuuOPUxIkT1fLl
yxOpr6RdT0r7+B4Sq2fZ4pprrqk1n++66660u2UtxgNBFJsvN954o/vvM844
I+0uQrhevXo5c6VBgwZq9+7daXcnVsRTBMF8AbyxPhCW/p5vbs6ceuqpaXfH
eoyHmRhXWRgPc5EPyWLaeOjroU488cTEa1h9+vSJ/RosP2nXk9I+vgfqWRGZ
tv6zjvFAEMXmy2WXXeb++7rrrku7ixDuP//zP935smzZsrS7EyviKYJgvgDe
WB8Ii/O6sjAeZmJcZWE8zEU+JItJ45FkLWv//fdX55xzTqLXYPlJu56U9vE9
UM+KqJLrX6/PP/7xj+rHP/6xcx80fT1Au3bt1IABA5yf79y5M5Hj1lRzTup+
3XLLLapbt26qYcOGqkOHDmrIkCFq/vz5FelPPpPiMZJXbL4MHjzY/feECRPS
7iKEGzFihDtfZs2alXZ3YkU8RRDMF8Ab6wNhcV5XFsbDTIyrLIyHuciHZDFl
PJKoZeVfg7Vjx45UP18cnyfLx/dAPSuiSq3/N99803k+i9/86NKli1q4cGHs
x64p/5i6hnbCCScU7U/dunXVpEmTEu9PPlPiMSqj2Hw566yz3H/r5yMBfkaP
Hu3Ol2effTbt7sSKeIogmC+AN9YHwuK8riyMh5kYV1kYD3ORD8liwnhs3bpV
/cd//Efkekvz5s3da7A++eSTtD9WgbTrSWkf3wP1rIgqsf51jUpf31jOHGnW
rJl69913Yz1+TfnHy3/WULFWp04d9eSTTyban3wmxGNUTrH58tOf/tT9t36e
JODn1ltvdefLU089lXZ3YkU8RRDMF8Ab6wNhcV5XFsbDTIyrLIyHuciHZMn6
eEStZeWuwZozZ47oZ6GnXU9K+/geqGdFlPT637t3b8F/zxs3bqzGjh2rVqxY
oaqrq5268ZgxY1SjRo3cbXr27Om8Lyn5n3W//fZzamj6vmzr169XmzdvVo89
9piqqqpyt9HXjVXqXohZj8eorGLz5eyzz3b//dBDD6XdxQLcc1Sem266yf1d
PP/882l3J1bEUwTBfAG8sT4QFud1ZWE8zMS4ysJ4mIt8SJYsj4c+96XjQ5Ca
ij5Xpe8vduedd6oPPvgg7Y9QtrB1oSTqWWkc3wP1rIiSXv/62qbcfvW569mz
ZxfdbubMmap+/frutkleE5X/WfUxi/Xpo48+cupcue0qdZ1LluMxKq/YfDn/
/PPdf//hD39Iu4su7jkq069+9Sv3886dOzft7sSKeIogmC+AN9YHwuK8riyM
h5kYV1kYD3ORD8mS1fEIUsvq2rWruvzyy9UzzzzjXM+VRWnXk9I+vgfqWREl
vf4vuOACd79XXXWV77ZXXnllwTn5pOR/1ksvvdRzu1GjRrnbDR8+PLH+5Mtq
PEY6is0Xvc7KXXOVwj1H5crPo1avXp12d2JFPEUQkuaLvl/Eww8/rAYOHKja
t2/vXEuur2n993//d+f7eNu2batIP2rm8DZfy2o7SesD2cJ5XVkYDzMxrrIw
HuYiH5Ili+OxZcsW33sMtmjRwnkO1pQpU9S//vWvtLsbi7TrSWkf3wP1rIiS
Xv/f+c533P2W+u6/fj23bffu3WPrQ035n3XWrFme27399tvudjonqYQsxuM4
SL7Xq2TF5svNN9/s/vuUU05Ju4vcc1Q4HWv1Z2zSpInat29f2t2Jla3xFOFI
mS/6+vD8mFms6TrSG2+8kXhf8o9p+7WstpOyPrLOxnyX87qyMB5mYlxlYTzM
RT4kS1bGI5f/eV2Xdcghhzj3zZk+fXrFvrdYSWnXk9I+vgfqWRElvf4POOAA
d79ff/2177b69dy2zZs3j60PNeV/1g0bNnhut2nTJne71q1bJ9affFmJx3F7
4YUX1Icffph2NzLHa7507NjR+XfLli0TrQuVg3uOyvXll18615/pz6e/I2Qa
W+MpwpEwX3SdX+cbfrWsXNPfAUj6uqj849l+LavtJKwPE9iY73JeVxbGw0yM
qyyMh7nIh2TJynjo/G/x4sVuLUv/HXfyySer//3f/3XOO5ku7XpS2sf3QD0r
oqTXf/756T179vhuq2vWuW3r1asXWx9qyv+sfn3K74++hqMSshKP43b11Vdb
8Tnj5jVfzjrrLPf/6/9upol7jsr11FNPuZ9v5MiRaXcndrbGU4QjYb4cd9xx
7rH194H03ziffvqp2rVrl1qzZo168MEH1UEHHeRuo6+vLJVbRZH/u7D9Wlbb
SVgfJrAx3+W8riyMh5kYV1kYD3ORD8mSlfHQz7/q16+fGj16tJo3b16if79J
lHY9Ke3je6CeFVHS619fH5Lb78aNG3231edHctvqZ+0kJf+z6nuXetH9zW2n
7+1TCVmJx3HT5+ROOumktLuROV7zZfLkye7/1886SRP3HJVr2LBhZY9NFtka
TxFO2vPlH//4h3vcdu3aqWXLlhXdTl9XqXOS3LZ/+ctfEutT/u/C5mtZkf76
MIWN+S7ndWVhPMzEuMrCeJiLfEiWrIyHjflfvrTrSWkf3wP1rIgkPT/rtdde
c7fV70tK/mddtGiR53b62RS57fr27ZtYf/JlJR7HST8/SX9O/Vwl/ax5lM9r
vqxbt869NrJXr16p9pF7jsq0Y8cO975mbdu2NfI7QjbGU4SX9nzR14rmjquv
w/Lz0EMPudsOGTIksT7l/y5svpYV6a8PE9ia73JeVxbGw0yMqyyMh7nIh2TJ
wnjYmv/lS7uelPbxPVDPiijp9T906FB3v6XuNaavwcxte95558XWh5ryP+u4
ceM8t7v++uvd7a699trE+pMvC/E4bvreRbnPqp9/iPL5zZdzzjnH/dmcOXNS
6yP3HJXpkUcecT+bjnUmsjGeIry054v+7kHuuGvXrvXdduXKle623bp1S6xP
+b8Lm69lRfrrwwS25ruc15WF8TAT4yoL42Eu8iFZsjAetuZ/+dKuJ6V9fA9m
noSroKTXf/7zWRo0aFD0XjWa/nn+ee9HH300tj7UlP9ZW7VqpT777LNa23zw
wQeqadOmFa8HZCEex23gwIHuZ73iiivS7k6m+M2Xl156yf3Zz372s9T6yD1H
5dm3b586+uijnc9Vt25d9fHHH6fdpUTYGE8RXtrzRecjNY9fTuNaVlRC2uvD
BLbmu5zXlYXxMBPjKgvjYS7yIVmyMB625n/50q4npX18D9SzIkp6/etrH3r0
6OHuW19jqa+JWrFihfN8c/2/+v/rn+e26dmzp6quro6tDzXV/LydOnVSTzzx
hHNeW9/vTD976MADD3Rf79+/f2J9qSkL8ThO27ZtKxj7rl27pt2lTPGbL7pm
oe+TmatZ6BptGrjnqDz53zNI8lrYtNkWTxFN2vMl/zs9QZqO70nJP46t17Li
G2mvj6yzOd/lvK4sjIeZGFdZGA9zkQ/JIn08bM7/8qVdT0r7+B6oZ0VUifU/
f/581ahRo7LOy+i1/s4778R6/Jryj9e7d2/f/uhnnL///vuJ9ief9Hgct2ee
eabW5126dGna3cqMUvPlueeec39++umnp9JH7jkqi/4eQe47Bvr8eVp1zkqw
LZ4imrTni77OKnfcUteyVkr+78LGa1nxrbTXR9bZnO9yXlcWxsNMjKssjIe5
yIdkkT4eNud/KIl6VkSVWv/6Ogd9jsOvdqSfAeF3rURcasYSr35VVVWpBQsW
JN6ffNLjcdz08+Vt+rxxK2e+nHzyye5rzz77bMX7yD1HZbnzzjvdz3TllVem
3Z1E2RZPEU3a86V79+7ucV999dWKHddP/u/CxmtZ8a2010fW2Zzvcl5XFsbD
TIyrLIyHuciHZJE+HjbnfyiJelZElVz/+lpLvW99/742bdo496Tp3LmzOvHE
E9WUKVPUjh07EjluTfmfVVu1apW68MILVbt27VTDhg3VEUccoUaPHq2++uqr
ivQnn/R4HLdDDz201uc96aST0u5WZpQzX5YsWeLMa/1ax44dfZ+BkgTuOSrH
Rx995Nbo2rZtW/G5UGm2xVNEk/Z8+fnPf+4eV1/XKkH+78K2a1lRKO31kXU2
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
3dLzc+7cuc4YDB482PPzXnrpperll19We/bsSbvLRsvC+oAczBfAG+ujNPLd
4jivKwvjYSbGVRbGw1zkQ7JIGA/yP4REPSsiCesf3zJxPCZMmKCaNWumZs+e
Xeu1cuK7lrsWd/r06Ul3N1OyNl/0tVgLFixQ48ePV/3791cNGjSo1X/9nZYf
/vCHzrVdU6dOVf/85z/V119/nXbXa1m3bp16/fXX1QMPPODUp44++uha90DW
TT9HTP8dc/fdd3NP5ArL2vpAupgvgDfWR2nku8VxXlcWxsNMjKssjIe5yIdk
kTAe5H8IiXpWRBLWP75l4nicc845RWO7Vm5813SM1zUOfCvr80U/T+r5559X
Y8aMUYMGDVIdOnSo9XlyraqqSvXr109dcskl6o477lBPPPGEmjlzpnr33XfV
mjVrVHV1dWz90teUff7552rRokXOM7+mTZvm1OAuvPBCp9bWunVrz3527drV
mfO/+93vnP7pfSEdWV8fqCzmC+CN9VEa+W5xnNeVhfEwE+MqC+NhLvIhWSSM
B/kfQqKeFZGE9Y9vmTYee/fu9YztWpD4rs2aNSvuLmaaafNFW716tfr73/+u
Ro0apc4++2zVu3dv59prr/pRfmvevLnzTCr9rCpddzrhhBOcOpnOMX7xi184
tTDddF1K/+y0005ztvnBD37gvOfggw92vltT7rH0e8477zw1duxY59ry9evX
p/3rQx4T1weSw3wBvLE+/JHveuO8riyMh5kYV1kYD3ORD8mS9niQ/yEC6lkR
pb3+Uci28Qga31HIlvmi71O4cuVK9eqrr6r7779f/dd//Zc6//zz1UknnaR6
9erlXNdV7N6FYZu+5+FBBx2kvve976mBAweqYcOGqZEjR6oHH3zQyVe++OKL
tH8lKIMt6wPxYL4A3lgf0dic73JeVxbGw0yMqyyMh7nIh2SRPh42538oiXpW
RNLXv21sGw/iezS2zZdSNmzYoJYsWaLmzZun5syZo2bMmKH+9re/qb/+9a/O
c64mTpzoNP3MTf0zfR2Y3kY/B0u/Z+nSpWrz5s1pfwzEhPWBIJgvgDfWRzQ2
57uc15WF8TAT4yoL42Eu8iFZpI+HzfkfSqKeFZH09W8b28aD+B6NbfMFCIL1
gSCYL4A31kc0Nue7nNeVhfEwE+MqC+NhLvIhWaSPh835H0qinhWR9PVvG9vG
g/gejW3zBQiC9YEgmC+AN9ZHNDbnu5zXlYXxMBPjKgvjYS7yIVmkj4fN+R9K
op4VkfT1bxvbxoP4Ho1t8wUIgvWBIJgvgDfWRzQ257uc15WF8TAT4yoL42Eu
8iFZpI+HzfkfSqKeFZH09W8b28aD+B6NbfMFCIL1gSCYL4A31kc0Nue7nNeV
hfEwE+MqC+NhLvIhWaSPh835H0qinhWR9PVvG9vGg/gejW3zBQiC9YEgmC+A
N9ZHNDbnu5zXlYXxMBPjKgvjYS7yIVmkj4fN+R9Kop4VkfT1bxvbxoP4Ho1t
8wUIgvWBIJgvgDfWRzQ257uc15WF8TAT4yoL42Eu8iFZpI+HzfkfSqKeFZH0
9W8b28aD+B6NbfMFCIL1gSCYL4A31kc0Nue7nNeVhfEwE+MqC+NhLvIhWaSP
h835H0qinhVRsfU/ZswY9a9//YuWQrv44otFx+O4Ed+jYf3SaN7NtniKaIin
NJp3I55GY3O+y3ldWRgPMzGusjAe5uLvBVlNen5qc/6HkqhnRVQsHtNkNUnx
OG7E92hYvzRasGZyPEU0xFMaLVgjnpbP5nw3/7xu79691dSpU2kpto4dO7rj
wXl2c7DOZDXWmbn4e0F+k5Sf2pz/oSTqWRERj+U3SfE4bsT3aFi/NFqwZnI8
RTTEUxotWCOels/mfDf/PDtNVuM8uzlYZ3Ib68ws/L0gv0nKT23O/1AS9ayI
iMfym6R4HDfiezSsXxotWDM5niIa4imNFqwRT8tnc77LeXa5jfPs5mCdyW2s
M7Pw94L8Jik/tTn/Q0nUsyIiHstvkuJx3Ijv0bB+abRgzeR4imiIpzRasEY8
LZ/N+S7n2eU2zrObg3Umt7HOzMLfC/KbpPzU5vwPJVHPimjUqFGqXbt2NMFt
0qRJaU+TxBDfo2H90mjBmsnxFNEQT2m0YI14Wj6b892lS5eqxYsX0wS2Tz/9
NO3pgZiwzuQ21plZ+HtBfpOUn9qc/6Ek6llAhhHfAQAAYDLyXQAAALuQ/8EH
9Swgw4jvAAAAMBn5LgAAgF3I/+CDehaQYcR3AAAAmIx8FwAAwC7kf/BBPQvI
MOI7AAAATEa+CwAAYBfyP/igngVkGPEdAAAAJiPfBQAAsAv5H3xQzwIyjPgO
AAAAk5HvAgAA2IX8Dz6oZwEZRnwHAACAych3AQAA7EL+Bx/Us4AMI74DAADA
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
     "], {{0, 476}, {1716, 
     0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{1716, 476},
   PlotRange->{{0, 1716}, {0, 476}}]], "Input"],
 "\nWe want to calculate the thickness of the precompensation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["L", "pc"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") and compensation ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["L", "c"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") YVO4 crystals. We start by drawing out the layout the crystal \
orientations. In SPEQS-I the downconversion BBO has thickness L = 6mm. The \
crystal axis of each crystal is labelled. Essentially we want to find out the \
difference between the H and V photons for each colour (signal and idler). \n\
As can be seen from the diagram, BBO 3 and 4 has symmertric delay for H and V \
polarizations and therefore can be omitted in the calcuations. Furthermore, \
the order of BBO 3 and 4 does not matter (but the crystal axis orientation \
matters for the spatial walkoff). \nBBO 1 and 2 there is some form of \
symmetry in the delay time. Essentially, only the circled time delay is being \
included for HH and VV path, as the rest is symmetric.\nNarrow bandwidth of \
pump means long coherence length/time. If a narrow bandwidth pump is used, \
then no difference in temporal retardation in BBO1 (o_p -> 0 in diagram), \
thus pre-compensation is not needed. \nSPDC is a broadband process, hence the \
photon pairs created in BBO1 is broadband and thus the difference must be \
accounted for (e_s e_i in diagram) when the photon pairs pass through BBO2. \
If SPDC is a narrow band process then post-compensation is not needed.\nWe \
can have four equations for the time taken for signal and idler in the H and \
V polarizations:\n\nT(",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", "s"], ")"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["L", "pc"], 
     RowBox[{
      SubscriptBox["V", "pc"], "(", 
      RowBox[{"p", ",", "o"}], ")"}]], " ", "+", " ", 
    FractionBox["L", 
     RowBox[{
      SubscriptBox["V", "BBO"], "(", 
      RowBox[{"p", ",", "o"}], ")"}]], "+", " ", 
    FractionBox[
     SubscriptBox["L", "c"], 
     RowBox[{
      SubscriptBox["V", "c"], "(", 
      RowBox[{"s", ",", "e"}], ")"}]]}], TraditionalForm]]],
 "\nT",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["H", "i"], ")"}], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["L", "pc"], 
    RowBox[{
     SubscriptBox["V", "pc"], "(", 
     RowBox[{"p", ",", "o"}], ")"}]], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   FractionBox["L", 
    RowBox[{
     SubscriptBox["V", "BBO"], "(", 
     RowBox[{"p", ",", "o"}], ")"}]], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["L", "c"], 
    RowBox[{
     SubscriptBox["V", "c"], "(", 
     RowBox[{"i", ",", "e"}], ")"}]], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", 
    SubscriptBox["V", "s"]}], TraditionalForm]]],
 ") = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["L", "pc"], 
    RowBox[{
     SubscriptBox["V", "pc"], "(", 
     RowBox[{"p", ",", "e"}], ")"}]], TraditionalForm]]],
 "+ ",
 Cell[BoxData[
  FormBox[
   FractionBox["L", 
    RowBox[{
     SubscriptBox["V", "BBO"], "(", 
     RowBox[{"s", ",", "e"}], ")"}]], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["L", "c"], 
    RowBox[{
     SubscriptBox["V", "c"], "(", 
     RowBox[{"s", ",", "o"}], ")"}]], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", 
    SubscriptBox["V", "i"]}], TraditionalForm]]],
 ") = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["L", "pc"], 
    RowBox[{
     SubscriptBox["V", "pc"], "(", 
     RowBox[{"p", ",", "e"}], ")"}]], TraditionalForm]]],
 "+ ",
 Cell[BoxData[
  FormBox[
   FractionBox["L", 
    RowBox[{
     SubscriptBox["V", "BBO"], "(", 
     RowBox[{"i", ",", "e"}], ")"}]], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["L", "c"], 
    RowBox[{
     SubscriptBox["V", "c"], "(", 
     RowBox[{"i", ",", "o"}], ")"}]], TraditionalForm]]],
 "\n\nwe need to solve for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "pc"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "c"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " using:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"T", "(", 
      SubscriptBox["H", "s"], ")"}], " ", "-", " ", 
     RowBox[{"T", "(", 
      SubscriptBox["V", "s"], ")"}]}], " ", "=", " ", "0"}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"T", "(", 
      SubscriptBox["H", "i"], ")"}], " ", "-", " ", 
     RowBox[{"T", "(", 
      SubscriptBox["V", "i"], ")"}]}], " ", "=", " ", "0"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.649732683050068*^9, 3.649732784689178*^9}, {
   3.649732821988361*^9, 3.649732837027783*^9}, 3.649732945634461*^9, {
   3.6497330426593924`*^9, 3.649733054302081*^9}, {3.64973309773281*^9, 
   3.649733101572711*^9}, {3.649733148584423*^9, 3.649733376875691*^9}, {
   3.649733453106661*^9, 3.6497336753617973`*^9}, {3.649734196557811*^9, 
   3.649734261281398*^9}, {3.649734364249216*^9, 3.649734414925068*^9}, {
   3.649736133139999*^9, 3.6497362189156513`*^9}, {3.6497363627686663`*^9, 
   3.6497367501485987`*^9}, {3.649737360270987*^9, 3.6497375913564663`*^9}, {
   3.650347365611581*^9, 3.6503473814066153`*^9}, {3.650858059163574*^9, 
   3.650858068757934*^9}, {3.650859325600676*^9, 3.6508593327684937`*^9}, {
   3.650865401988385*^9, 3.650865456766871*^9}}],

Cell["\<\
We define the group velocity of bbo and yvo4 in the next section:\
\>", "Text",
 CellChangeTimes->{
  3.649736797419959*^9, {3.649737155704177*^9, 3.6497371779197073`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ordindex", "[", "\[Lambda]_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"2.7359`", "\[InvisibleSpace]", "+", 
     FractionBox["0.01878`", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Lambda]"}], "-", "0.01822`"}]], "-", 
     RowBox[{"0.01354`", " ", "\[Lambda]", " ", "\[Lambda]"}]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"extindex", "[", "\[Lambda]_", "]"}], ":=", 
   SqrtBox[
    RowBox[{"2.3753`", "\[InvisibleSpace]", "+", 
     FractionBox["0.01224`", 
      RowBox[{
       RowBox[{"\[Lambda]", " ", "\[Lambda]"}], "-", "0.01667`"}]], "-", 
     RowBox[{"0.01516`", " ", "\[Lambda]", " ", "\[Lambda]"}]}]]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"airindex", "[", "\[Lambda]_", "]"}], ":=", 
   RowBox[{"1.000287566`", "\[InvisibleSpace]", "+", 
    FractionBox["1.3412`", 
     FractionBox[
      RowBox[{
       SuperscriptBox["10", "18"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]", " ", "\[Lambda]"}], ")"}]}], 
      SuperscriptBox["10", "12"]]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dnodl", "[", "\[Lambda]_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.02708`"}], " ", "\[Lambda]"}], "-", 
     FractionBox[
      RowBox[{"0.03756`", " ", "\[Lambda]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.01822`"}], "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], "2"]]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"2.7359`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.01354`", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       FractionBox["0.01878`", 
        RowBox[{
         RowBox[{"-", "0.01822`"}], "+", 
         SuperscriptBox["\[Lambda]", "2"]}]]}]]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dnedl", "[", "\[Lambda]_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.03032`"}], " ", "\[Lambda]"}], "-", 
     FractionBox[
      RowBox[{"0.02448`", " ", "\[Lambda]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.01667`"}], "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], "2"]]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"2.3753`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.01516`", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       FractionBox["0.01224`", 
        RowBox[{
         RowBox[{"-", "0.01667`"}], "+", 
         SuperscriptBox["\[Lambda]", "2"]}]]}]]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dneffdl", "[", 
    RowBox[{"\[Lambda]_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "0.02708`"}], " ", "\[Lambda]"}], "-", 
           FractionBox[
            RowBox[{"0.03756`", " ", "\[Lambda]"}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.01822`"}], "+", 
               SuperscriptBox["\[Lambda]", "2"]}], ")"}], "2"]]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2.7359`", "\[InvisibleSpace]", "-", 
           RowBox[{"0.01354`", " ", 
            SuperscriptBox["\[Lambda]", "2"]}], "+", 
           FractionBox["0.01878`", 
            RowBox[{
             RowBox[{"-", "0.01822`"}], "+", 
             SuperscriptBox["\[Lambda]", "2"]}]]}], ")"}], "2"]]}], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.03032`"}], " ", "\[Lambda]"}], "-", 
          FractionBox[
           RowBox[{"0.02448`", " ", "\[Lambda]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.01667`"}], "+", 
              SuperscriptBox["\[Lambda]", "2"]}], ")"}], "2"]]}], ")"}], " ", 
        
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2.3753`", "\[InvisibleSpace]", "-", 
          RowBox[{"0.01516`", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          FractionBox["0.01224`", 
           RowBox[{
            RowBox[{"-", "0.01667`"}], "+", 
            SuperscriptBox["\[Lambda]", "2"]}]]}], ")"}], "2"]]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], 
         RowBox[{"2.7359`", "\[InvisibleSpace]", "-", 
          RowBox[{"0.01354`", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          FractionBox["0.01878`", 
           RowBox[{
            RowBox[{"-", "0.01822`"}], "+", 
            SuperscriptBox["\[Lambda]", "2"]}]]}]], "+", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], 
         RowBox[{"2.3753`", "\[InvisibleSpace]", "-", 
          RowBox[{"0.01516`", " ", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          FractionBox["0.01224`", 
           RowBox[{
            RowBox[{"-", "0.01667`"}], "+", 
            SuperscriptBox["\[Lambda]", "2"]}]]}]]}]], ")"}], 
     RowBox[{"3", "/", "2"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yvooindex", "[", "\[Lambda]_", "]"}], ":=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"3.77834", " ", "+", " ", 
     RowBox[{"0.069736", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]", "^", "2"}], "-", "0.04724"}], ")"}]}], "-", " ", 
     
     RowBox[{"0.0108133", "\[Lambda]", " ", "\[Lambda]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yvoeindex", "[", "\[Lambda]_", "]"}], ":=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"4.59905", " ", "+", " ", 
     RowBox[{"0.110534", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Lambda]", "^", "2"}], "-", "0.04813"}], ")"}]}], "-", 
     RowBox[{"0.0122676", " ", "\[Lambda]", " ", "\[Lambda]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dyvooindexdl", "[", "\[Lambda]_", "]"}], ":=", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.0216266`"}], " ", "\[Lambda]"}], "-", 
      FractionBox[
       RowBox[{"0.139472`", " ", "\[Lambda]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "0.04724`"}], "+", 
          SuperscriptBox["\[Lambda]", "2"]}], ")"}], "2"]]}], 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"3.77834`", "\[InvisibleSpace]", "-", 
        RowBox[{"0.0108133`", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        FractionBox["0.069736`", 
         RowBox[{
          RowBox[{"-", "0.04724`"}], "+", 
          SuperscriptBox["\[Lambda]", "2"]}]]}]]}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dyvoeindexdl", "[", "\[Lambda]_", "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.024534`"}], " ", "\[Lambda]"}], "-", 
     FractionBox[
      RowBox[{"0.221068`", " ", "\[Lambda]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.04813`"}], "+", 
         SuperscriptBox["\[Lambda]", "2"]}], ")"}], "2"]]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"4.59905`", "\[InvisibleSpace]", "-", 
       RowBox[{"0.012267`", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], "+", 
       FractionBox["0.110534`", 
        RowBox[{
         RowBox[{"-", "0.04813`"}], "+", 
         SuperscriptBox["\[Lambda]", "2"]}]]}]]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C1", "=", "300000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bboogroupvel", "[", 
    RowBox[{"\[Lambda]_", ",", "\[Theta]pm_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "no"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"no", "=", 
       RowBox[{"ordindex", "[", "\[Lambda]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"no", " ", "-", " ", 
          RowBox[{"\[Lambda]", " ", 
           RowBox[{"dnodl", "[", "\[Lambda]", "]"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"C1", " ", "u"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bboegroupvel", "[", 
    RowBox[{"\[Lambda]_", ",", "\[Theta]pm_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "no", ",", "ne", ",", "neff", ",", "\[Theta]"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"no", "=", 
       RowBox[{"ordindex", "[", "\[Lambda]", "]"}]}], ";", 
      RowBox[{"ne", "=", 
       RowBox[{"extindex", "[", "\[Lambda]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Theta]", "=", 
       RowBox[{"\[Theta]pm", "-", "\[Delta]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"neff", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "/", "no"}], ")"}], "^", 
            "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "/", "ne"}], ")"}], "^", 
            "2"}]}], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"neff", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"no", "^", "2"}]}], " ", "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"ne", "^", "2"}]}], " ", "-", " ", 
                RowBox[{"1", "/", 
                 RowBox[{"no", "^", "2"}]}]}], ")"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "^", "2"}]}]}], 
            ")"}]}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"neff", " ", "-", " ", 
          RowBox[{"\[Lambda]", " ", 
           RowBox[{"dneffdl", "[", 
            RowBox[{"\[Lambda]", ",", "\[Theta]"}], "]"}]}]}], ")"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"C1", " ", "u"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yvoogroupvel", "[", "\[Lambda]_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "no"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"no", "=", 
       RowBox[{"yvooindex", "[", "\[Lambda]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"no", " ", "-", " ", 
          RowBox[{"\[Lambda]", " ", 
           RowBox[{"dyvooindexdl", "[", "\[Lambda]", "]"}]}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"C1", " ", "u"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yvoegroupvel", "[", "\[Lambda]_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "ne"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ne", "=", 
       RowBox[{"yvoeindex", "[", "\[Lambda]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"ne", " ", "-", " ", 
          RowBox[{"\[Lambda]", " ", 
           RowBox[{"dyvoeindexdl", "[", "\[Lambda]", "]"}]}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"C1", " ", "u"}], "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neff", "[", 
    RowBox[{"\[Lambda]_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"no", ",", "ne"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"no", "=", 
       RowBox[{"ordindex", "[", "\[Lambda]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ne", "=", 
       RowBox[{"extindex", "[", "\[Lambda]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"no", "^", "2"}]}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"ne", "^", "2"}]}], " ", "-", " ", 
              RowBox[{"1", "/", 
               RowBox[{"no", "^", "2"}]}]}], ")"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ")"}], "^", "2"}]}]}], 
          ")"}]}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6497344660403337`*^9, 3.649734466594405*^9}, {
  3.649734560511939*^9, 3.649734560903427*^9}, {3.6497345950631247`*^9, 
  3.649734604804963*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell["\<\
We use the pump as 405nm, BBO cutting angle as 28.7591 degree, signal at \
760nm.\
\>", "Text",
 CellChangeTimes->{{3.649737186640555*^9, 3.6497372464135113`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", "=", "0.405"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TP", "=", 
   RowBox[{"28.7591", "*", 
    RowBox[{"3.142", "/", "180"}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", "0.76"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Id", "=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"P", "*", "S"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"S", "-", "P"}], ")"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.649735590435358*^9, 3.649735613614222*^9}, {
  3.649735736580152*^9, 3.649735743745866*^9}, {3.6497371957526293`*^9, 
  3.649737196575782*^9}, {3.649737627524619*^9, 3.649737638866868*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData["0.405`"], "Output",
 CellChangeTimes->{3.6497376396201477`*^9, 3.6497376725787563`*^9, 
  3.650842578027068*^9, 3.6508654716278954`*^9},
 Background->GrayLevel[0.85]],

Cell[BoxData["0.5020060677777778`"], "Output",
 CellChangeTimes->{3.6497376396201477`*^9, 3.6497376725787563`*^9, 
  3.650842578027068*^9, 3.650865471635886*^9},
 Background->GrayLevel[0.85]],

Cell[BoxData["0.76`"], "Output",
 CellChangeTimes->{3.6497376396201477`*^9, 3.6497376725787563`*^9, 
  3.650842578027068*^9, 3.650865471643693*^9},
 Background->GrayLevel[0.85]],

Cell[BoxData["0.8670422535211268`"], "Output",
 CellChangeTimes->{3.6497376396201477`*^9, 3.6497376725787563`*^9, 
  3.650842578027068*^9, 3.650865471649816*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[TextData[{
 "Here we solve the two equations for Lpc and Lc:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"T", "(", 
      SubscriptBox["H", "i"], ")"}], " ", "-", " ", 
     RowBox[{"T", "(", 
      SubscriptBox["V", "i"], ")"}]}], " ", "=", " ", "0"}], 
   TraditionalForm]]],
 " (1st equation)\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"T", "(", 
      SubscriptBox["H", "s"], ")"}], " ", "-", " ", 
     RowBox[{"T", "(", 
      SubscriptBox["V", "s"], ")"}]}], " ", "=", " ", "0"}], 
   TraditionalForm]]],
 " (2nd equation)\n\nHere we using BBO1 & 2 L=6mm."
}], "Text",
 CellChangeTimes->{{3.649737251974852*^9, 3.649737331923155*^9}, {
  3.6497380452139673`*^9, 3.6497380725493927`*^9}, {3.650859335935315*^9, 
  3.650859337375184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["L", "pc"], "/", 
        RowBox[{"yvoogroupvel", "[", "P", "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"0.006", "/", 
        RowBox[{"bboogroupvel", "[", 
         RowBox[{"P", ",", "TP", ",", "0"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["L", "c"], "/", 
        RowBox[{"yvoegroupvel", "[", "Id", "]"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["L", "pc"], "/", 
          RowBox[{"yvoegroupvel", "[", "P", "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{"0.006", "/", 
          RowBox[{"bboegroupvel", "[", 
           RowBox[{"Id", ",", "TP", ",", "0"}], "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["L", "c"], "/", 
          RowBox[{"yvoogroupvel", "[", "Id", "]"}]}], ")"}]}], ")"}]}], 
     "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["L", "pc"], "/", 
        RowBox[{"yvoogroupvel", "[", "P", "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"0.006", "/", 
        RowBox[{"bboogroupvel", "[", 
         RowBox[{"P", ",", "TP", ",", "0"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["L", "c"], "/", 
        RowBox[{"yvoegroupvel", "[", "S", "]"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["L", "pc"], "/", 
          RowBox[{"yvoegroupvel", "[", "P", "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{"0.006", "/", 
          RowBox[{"bboegroupvel", "[", 
           RowBox[{"S", ",", "TP", ",", "0"}], "]"}]}], ")"}], "+", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["L", "c"], "/", 
          RowBox[{"yvoogroupvel", "[", "S", "]"}]}], ")"}]}], ")"}]}], 
     "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["L", "pc"], ",", 
     SubscriptBox["L", "c"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.649735481402378*^9, 3.649735540144681*^9}, {
  3.650843459892722*^9, 3.6508434839705763`*^9}, {3.650843595315954*^9, 
  3.650843597402205*^9}, {3.650865340966146*^9, 3.6508653878848886`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["L", "pc"], "\[Rule]", "0.003441638859143015`"}], ",", 
    RowBox[{
     SubscriptBox["L", "c"], "\[Rule]", "0.0031178697234020714`"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.649735540812551*^9, {3.649735597508658*^9, 3.649735618518804*^9}, 
   3.649737676040819*^9, {3.650843462118402*^9, 3.6508434869129744`*^9}, 
   3.650843598336424*^9, 3.650865390138262*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[TextData[{
 "There is an alternative way to look at the compensation in the SPEQS unit \
in terms of phase. \nWe first define wavenumber in material to be:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"k", "(", "\[Gamma]", ")"}], "\[Alpha]"], "\[Beta]"], "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]", " ", 
      RowBox[{
       SuperscriptBox["n", "\[Beta]"], "(", 
       RowBox[{
        SubscriptBox["\[Lambda]", "\[Alpha]"], ",", "\[Gamma]"}], ")"}]}], 
     SubscriptBox["\[Lambda]", "\[Alpha]"]]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nwhere \[Alpha] = p (pump wavelength), s (signal wavelength) or i (idler \
wavelength)\n\[Beta] = e (extraordinary polarization) or o (ordinary \
polarization)\n\[Gamma] = bbo or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["yvo", "4"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " (material)\n\nWhen light (pump light, plane wave) with 45 degree \
polarization passes through an uniaxial crystal with length L, both the \
ordinary and extraordinary components pick up a (different) phase:\n\n",
 Cell[BoxData[
  TemplateBox[{"o"},
   "Ket"]]],
 "+ ",
 Cell[BoxData[
  TemplateBox[{"e"},
   "Ket"]]],
 " \[LongRightArrow] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["ik", "p"], "o"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "]",
 Cell[BoxData[
  TemplateBox[{"o"},
   "Ket"]]],
 "+",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["ik", "p"], "e"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "]",
 Cell[BoxData[
  TemplateBox[{"e"},
   "Ket"]]],
 "\n= ",
 Cell[BoxData[
  TemplateBox[{"o"},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{"i", "(", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["k", "p"], "e"], "-", 
      SuperscriptBox[
       SubscriptBox["k", "p"], "o"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")L]",
 Cell[BoxData[
  TemplateBox[{"e"},
   "Ket"]]],
 "\nbecause since only the relative phase matters, it can be written in this \
way.\n\nNow we can look at the SPEQS setup. \nAt postion (I), the pump passes \
through the pre-compensator ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["YVO", "4"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with length ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "pc"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", therefore the wavefunction at (I) woud be:\n\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["\[Psi]", "I"]},
   "Ket"]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", 
        SubscriptBox["yvo", "4"], ")"}], "p"], "o"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["o", "p"]},
   "Ket"]]],
 "+ ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", 
        SubscriptBox["yvo", "4"], ")"}], "p"], "e"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["e", "p"]},
   "Ket"]]],
 "\n= ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["o", "p"]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"i", "(", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "p"], "e"], "-", 
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "p"], "o"]}], ")"}], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["e", "p"]},
   "Ket"]]],
 "\n\[Equivalent] = ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["o", "p"]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["e", "p"]},
   "Ket"]]],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "pc"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"k", "(", 
       SubscriptBox["yvo", "4"], ")"}], "p"], "e"], "-", 
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"k", "(", 
       SubscriptBox["yvo", "4"], ")"}], "p"], "o"]}], TraditionalForm]]],
 "\n\nAt position (II) the pump has downconverted into signal and idler \
through type-I SPDC. The o-component of the pump (",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["o", "p"]},
   "Ket"]]],
 ") eventually becomes the ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 "and e-compoent of the pump (",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["e", "p"]},
   "Ket"]]],
 ") becomes the ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["V", "s"], 
      SubscriptBox["V", "i"]}]},
   "Ket"]]],
 ". Therefore the wavefunction at (II) will be:\n\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["\[Psi]", "I"]},
   "Ket"]]],
 " \[LongRightArrow] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["\[Psi]", "II"]},
   "Ket"]]],
 "\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["\[Psi]", "I"]},
   "Ket"]]],
 " = ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["o", "p"]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["e", "p"]},
   "Ket"]]],
 " \[LongRightArrow] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["\[Psi]", "II"]},
   "Ket"]]],
 "= ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", "bbo", ")"}], "p"], "o"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"Exp", "[", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox[
        RowBox[{"ik", "(", "bbo", ")"}], "s"], "e"], "L"}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["V", "s"]},
   "Ket"]]],
 "\[TensorProduct] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", "bbo", ")"}], "i"], "e"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["V", "i"]},
   "Ket"]]],
 "}\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["\[Psi]", "II"]},
   "Ket"]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", "bbo", ")"}], "p"], "o"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]]],
 "] Exp[i(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"ik", "(", "bbo", ")"}], "s"], "e"], TraditionalForm]]],
 "+",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"ik", "(", "bbo", ")"}], "i"], "e"], TraditionalForm]]],
 ")L] ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["V", "s"], 
      SubscriptBox["V", "i"]}]},
   "Ket"]]],
 "\n= ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]]],
 "] Exp[i(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"ik", "(", "bbo", ")"}], "s"], "e"], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"ik", "(", "bbo", ")"}], "i"], "e"], TraditionalForm]]],
 " - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"ik", "(", "bbo", ")"}], "p"], "o"], TraditionalForm]]],
 ")L] ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["V", "s"], 
      SubscriptBox["V", "i"]}]},
   "Ket"]]],
 "\n\[Equivalent] = ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]]],
 "] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "dc"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["V", "s"], 
      SubscriptBox["V", "i"]}]},
   "Ket"]]],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "dc"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"k", "(", "bbo", ")"}], "s"], "e"], TraditionalForm]]],
 " + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"k", "(", "bbo", ")"}], "i"], "e"], TraditionalForm]]],
 " - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox[
     RowBox[{"k", "(", "bbo", ")"}], "p"], "o"], TraditionalForm]]],
 "\n\nAt position (III) the downconverted photons experiences another phase \
shift based on their polairzation (V or H) because they experience a \
different refractive index (o or e) and also the phase shift depends on their \
wavelength. Therefore the transformation through post-compensation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["YVO", "4"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " crystal with length ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", "c"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " will be:\n\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["V", "s"]},
   "Ket"]]],
 " \[LongRightArrow] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", 
        SubscriptBox["yvo", "4"], ")"}], "s"], "o"], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["V", "s"]},
   "Ket"]]],
 "\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["V", "i"]},
   "Ket"]]],
 " \[LongRightArrow] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", 
        SubscriptBox["yvo", "4"], ")"}], "i"], "o"], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["V", "i"]},
   "Ket"]]],
 "\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["H", "s"]},
   "Ket"]]],
 " \[LongRightArrow] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", 
        SubscriptBox["yvo", "4"], ")"}], "s"], "e"], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["H", "s"]},
   "Ket"]]],
 "\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["H", "i"]},
   "Ket"]]],
 " \[LongRightArrow] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox[
       RowBox[{"ik", "(", 
        SubscriptBox["yvo", "4"], ")"}], "i"], "e"], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["H", "i"]},
   "Ket"]]],
 "\n\nTherefore the wavefunction at (III) will be:\n\n",
 Cell[BoxData[
  TemplateBox[{SubscriptBox["\[Psi]", "III"]},
   "Ket"]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"i", "(", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "s"], "e"], "+", 
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "i"], "e"]}], ")"}], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]]],
 "] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "dc"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"i", "(", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "s"], "o"], "+", 
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "i"], "o"]}], ")"}], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "]",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["V", "s"], 
      SubscriptBox["V", "i"]}]},
   "Ket"]]],
 "\n= ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}]}], TraditionalForm]]],
 "] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     SubscriptBox["i\[Phi]", "dc"], "L"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"i", "(", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "s"], "o"], "+", 
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "i"], "o"], "-", 
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "s"], "e"], "-", 
       SuperscriptBox[
        SubscriptBox[
         RowBox[{"k", "(", 
          SubscriptBox["yvo", "4"], ")"}], "i"], "e"]}], ")"}], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "]",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["V", "s"], 
      SubscriptBox["V", "i"]}]},
   "Ket"]]],
 "\n\[Equivalent] = ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["H", "s"], 
      SubscriptBox["H", "i"]}]},
   "Ket"]]],
 " + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{"i", "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[Phi]", "pc"], 
       SubscriptBox["L", "pc"]}], "+", 
      RowBox[{
       SubscriptBox["\[Phi]", "dc"], "L"}], "+", 
      RowBox[{
       SubscriptBox["\[Phi]", "c"], 
       SubscriptBox["L", "c"]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")] ",
 Cell[BoxData[
  TemplateBox[{RowBox[{
      SubscriptBox["V", "s"], 
      SubscriptBox["V", "i"]}]},
   "Ket"]]],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "c"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"k", "(", 
       SubscriptBox["yvo", "4"], ")"}], "s"], "o"], "+", 
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"k", "(", 
       SubscriptBox["yvo", "4"], ")"}], "i"], "o"], "-", 
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"k", "(", 
       SubscriptBox["yvo", "4"], ")"}], "s"], "e"], "-", 
    SuperscriptBox[
     SubscriptBox[
      RowBox[{"k", "(", 
       SubscriptBox["yvo", "4"], ")"}], "i"], "e"]}], TraditionalForm]]],
 "\n\nThe overall (relative) phase ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Phi]", "pc"], 
     SubscriptBox["L", "pc"]}], "+", 
    RowBox[{
     SubscriptBox["\[Phi]", "dc"], "L"}], "+", 
    RowBox[{
     SubscriptBox["\[Phi]", "c"], 
     SubscriptBox["L", "c"]}]}], TraditionalForm]]],
 " should be zero or close to zero after the compensations:"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdy00ogwEAxvG1g4ZkakWRfKQYSd5lk9I2Sg6Yr4nGmE0KW1az5bSZsslq
WvnKQSxs1shHLkw0ixKai6allMNm0nBYbZr3eQ9Pv8PTv1Cm6lDQaTRaPjm4
ef0YmiQ+BHa+PwwrebffkEfYfmDfuSEG5UF1HAob7HMaUp+jxwQHiv0HMOM0
1wMdh0P3UHkkCcA8YfoblLwLIlA8yInCeU92gvqPTVlTpCL+RQk0ED4hZD+x
O6E6tagftnIvpfBrXTcJV7wPs1C8oTVTPZGklAv/LPCzu9QJR0PN+1RHX3yA
Y8OsFzhdw6UM3xa9wsxVfgQmW4xxWMCKUupdW2la0mebKx1yxPEc6H0NlMGz
qrt2uGtk9cFfpVkKv/2McSjfa1PDI0bdNJSlMGdg40b5HLzZCS5Bhj7shM4T
1RUcsTbFYLUimoC6rWWmjnShS1QPrT+OXri2M6GFFW6NFdZa9NvQvRuLwH8G
6uwq
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Phi]", "pc"], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"yvoeindex", "[", "P", "]"}], "/", "P"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"yvooindex", "[", "P", "]"}], "/", "P"}]}], ")"}]}], ")"}], 
   "*", "0.00344164"}]}]], "Input",
 CellChangeTimes->{{3.650848885538198*^9, 3.650848904038025*^9}, {
  3.650865009774528*^9, 3.650865012307684*^9}, {3.650865148918045*^9, 
  3.650865172085215*^9}, {3.650865251326622*^9, 3.650865261029132*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData["0.014131754662222702`"], "Output",
 CellChangeTimes->{3.650848904803492*^9, 3.650865026018173*^9, 
  3.6508651746586037`*^9, 3.6508652632078953`*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Phi]", "dc"], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"neff", "[", 
         RowBox[{"S", ",", "TP"}], "]"}], "/", "S"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"neff", "[", 
         RowBox[{"Id", ",", "TP"}], "]"}], "/", "Id"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"ordindex", "[", "P", "]"}], "/", "P"}]}], ")"}]}], ")"}], 
   "*", "0.006"}]}]], "Input",
 CellChangeTimes->{{3.650848913004176*^9, 3.650848920563992*^9}, {
  3.650865016198902*^9, 3.65086501853743*^9}, {3.6508651918124847`*^9, 
  3.650865200796246*^9}, {3.650865265988801*^9, 3.6508652794598618`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{"-", "0.005652348059428214`"}]], "Output",
 CellChangeTimes->{3.650848922250596*^9, 3.650865028528949*^9, 
  3.650865222147725*^9, 3.650865281067183*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Phi]", "c"], "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"yvooindex", "[", "S", "]"}], "/", "S"}]}], ")"}], "+", 
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"yvooindex", "[", "Id", "]"}], "/", "Id"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"yvoeindex", "[", "S", "]"}], "/", "S"}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"2", "*", "Pi", "*", 
       RowBox[{
        RowBox[{"yvoeindex", "[", "Id", "]"}], "/", "Id"}]}], ")"}]}], ")"}], 
   "*", "0.00311787"}]}]], "Input",
 CellChangeTimes->{{3.650848924508205*^9, 3.6508489425728188`*^9}, {
  3.650865021701714*^9, 3.650865023472837*^9}, {3.650865203732358*^9, 
  3.650865219527721*^9}, {3.650865283596365*^9, 3.650865308067333*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{"-", "0.010333435946312936`"}]], "Output",
 CellChangeTimes->{3.650848943570788*^9, 3.6508650327173634`*^9, 
  3.650865224920794*^9, 3.65086531122108*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Phi]", "pc"], "+", 
  SubscriptBox["\[Phi]", "dc"], "+", 
  SubscriptBox["\[Phi]", "c"]}]], "Input",
 CellChangeTimes->{{3.6508489484440536`*^9, 3.6508489609223757`*^9}, {
  3.650865064803883*^9, 3.6508650742146378`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{"-", "0.0018540293435184482`"}]], "Output",
 CellChangeTimes->{3.650848961367751*^9, 3.650865075412245*^9, 
  3.6508652273110456`*^9, 3.6508653136190643`*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[TextData[{
 "CHSH Inequality Calculations\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
BuoHFbfVBOSdEZ9ZpwqZd84j0XyG+hpdvT7UV9p9/T8K2lExzWIfkvy8cw+L
482dMUbd884jZPR7+0DIhuDdPdL5vP5OovM9X3zknWo5U2/I6L9PnW9+Iwfj
1RV5Z7cVTa3taNuHSv61yXuOxs3z64Ke9Dpv7gB9AQAQ2jmSf4zUuV/mCNDX
Nwr60pptwG3ruom6VsV/pXNufHjFfpuAvNN/1qlC5J36ek6S6Jowfp3kne2y
gKTvV5cI2VQJ60l+1vmuqSktjzkuZZy65506Z1va+/vpkE3Bq/tk9H3POveg
j2dbfeWdagWJzlV7/0b1HG9DR2PWDXlnNz1/1c/AlRKd19mUtsZfb7bo2+wS
5f51u3cFAICQ9N4uPR/MOz6Guu/xawV9afV7r4Kul/hDidau7T0vPshK18Ot
7XlniKxT+cw7dX2arSRau6T3b4C8s12+JcN5/1/Reux/8zRm3fNOlbYWFev1
tof+Paf9jdwr7ufo9Zl3qs9LlDOlZZ7rORy3Lsg7u20j3d+B6T0Nk1vadtG6
6K9ZGqdfhxf0pd9vfzZQbwAAhJA2d1vvd5RVnxkf1BYFvfVzn4rO16/nPr1Z
VrL2s9j7sGpz3pmWdd4mfjJAX3nnMqZukey/AfLOdjlfRu9Th2F+x7z9uNZF
DsbcPmWcYcg7fyqj3+Ozg3YEn4rmfdDjzUKOxvaddypdn0mzrd7X+Y40f60u
8s5uO8joz8GzEl0LVHWc5F+bvGhhjEHoGq4vFfR2QaDeAADwTY+L+h1k3nHx
58G6E/lyTl9xLVhiO3oOqHP2553za+1lt/2h1Na8U3PzUFmncp13jpFo7rai
vwHyznZJu/evynrmPug9+kWf4/MdjPvplHGGIe/8kox+jx8M2hF8elSK/17e
lmg+Qlv3vsVC5J1K125JyzzfHumpqcg7u+0i2Z95fcZ9ngrb1u8F865Nnq2w
7aoOy+krvsdzgWDdAQDgj373WZQnhnzuYYOcvuLKW393JVN/l+Jz/bi+5eJF
DJk25p2aY+h61KGyTuUq75zM1P6SPq8ZeWe76RzGvftTXVN2hpBNlaDHpKLP
8W2Oxu6dA2IY8s6ZJHpfe9/naUM2BW90PbKy50DxvW8TWBo7VN6p1pVozZje
16jzGy7nqQffyDu77Sb5n3e953fQnD/tvvlkPVWx9yo+JcVr0J4QrDsAAPz5
i+QfD+8I19r/t47k96e1eMrPzSfl7mXrrR3cvZSh0ba8sw5Zp7Kdd+r1ql63
ps3RSd4JtbIM531/ui5J0ef4I1PzOxhb5/B8L1EzOxjDBZ3Dsfe9Xj5oR/Dl
Sen/XEjnv13Mwtgh8061iUTZfu/re12iuV2ahryzmz6zVebzrudJ/T7j/jPJ
vzZ5rHr7lZwl+f3p8/aTBesOAAD39Ps/faYh73gYej7L1SW/P62lE/9erz31
+fvketP9lI05fYZdm/LOumSdymbeqfeu3CqD/Q2Qd7aHPuvXuz/9ZdCOytH7
9st8lq83NUmgHutG5zPtfa93CtoRfCma6zbvOwPdH8xUYezQeafaTNIzT53L
aSnPvbhG3tlNr2H6+cz/ScrPZTtW8q9NHrL1Iga0muT3p7VxsO4AAHBvOyk+
Foae3yXtXLm39F6fKUwdIenrcvZTW3p5VfXWlryzTlmnspF3at6v16d6nTro
3wB5Z3ukzT/23aAdlaMZRdnP89USHR/a7hAZ/V7/KGhH8KXfe/x76xWJ7pOb
aICx65B3ysiYacdFvcetSWtVk3d20+NZv593vV/iJInWN8ij9/rnXZvca/el
9E3XaH1K8ns8N1h3AAC49yvJPw4+Eq61/1lRivNOvWarej4f1yZ+XlattSHv
rFvWqarknfpM0gES3a9S9W+AvLM9LpfR+9ONgnZUzhzS32dan+VeOUin9aHH
tt73+tdBO4Ivz4md8yOd3+jzfY5dl7xTbS/pmecLphYO1JNt5J3d9HueQT/v
Rc+4Xyj51yZ3Wn81/TtF8nvUddwnDtYdAABu6Tlw3nEw5LrsMZ1fKau/Kvew
ZdWGfl5WrTU976xj1qkGzTt1Le2Hxd7fQOjfA/z5h4zer9qYs881vW8lbe3l
vPrY1CXSzDn7ytB7Ynvf678H7Qi+PC/2jg/6d3SxROcJZdQp71Q7SvQael+X
/o4WDNiXLeSd3Y6Q6p/56yX9GXf9O8i7hvqnm5fUF72mKbpnpKlrdwEA2m1e
KT4Gbh+su44lJD3nTDtftVFr+3lZtdbkvLOuWafqN+9ceOTf2f4bqMPvAn48
LaP3r58M2lF5N8vgn3H92Z2lXZ91na+7970eF7IheKP3cNk+TrwlUZZUtN5J
3fJOlbWGje4P5w3Ylw3knd2+J3Y+72nPuKc9H5GsW5y+snL0GFf3dRoAAKPp
mnjXjdRvJfqOTesCie5JjOuHidJnGg4YKT3X2XmkdD3uzROl5wprjJTOC7nU
SOn8PvOO1BhT0ydqkDmNQtNnFovyzs8F665Df+/JnlzlnHHps/HxZ0Gf/4s/
Czrvd/xZ0Aw2/izMI53PQVOunZuad9Y561Rl887pJDrvHnRNLvJOxN6W7r/1
d0xNELSj8o6U6p91XV9dr1l13uap/Lbvnb6v/5XOd4Za+voP6Kk9pXN+1Ft6
b9zmObWudI6ZvbWqdI6haTW/dI6rvTW7dJ9z9dawfGZD0fk3XZ0z6bxH6+WM
Xce8U+0r6a9H5zscE66typJ5Z/x3fqZEf7+6n8v7e9X5o5J/k4tI/t9h0fyW
dXCM2P28ayYeP+P+O8m/hrrB9Ysr6X7J7/PicK0BADLoHNAuM68qpdePr46U
zgn0+Eg9Zur2RP1F0jNbnQ8mmdkeK+mZ7d6SndmuJemZ7aLSOW/R7eUd/zRL
qcMaD/oMSXzeFvq9rVL67GX8udB5BOLPhZ6HxJ+Jm6TzmdDzqPgzoevPxJ8H
zbniz8MRkp7h67lY/FnQZ1niz8JKkn4eO5t0zl91LeMm5p11zzpVUd6p1/R6
n4aeb7v8rG4r+ZkG1YzSz1J8PRx/7vSZzmExn9j9/kuP3TqfpX7PNbnH1+GT
npPo+xz6eOizNMN/NaNels6xOK3uke7ztmTdKp3jdVpdJp1jeG+dL93neb2V
PO/rrcNldEYd1/6SnlO/7eH3rOcsafdGriL1zDuV/i7TXsujEmV7wyiZd/r+
W9Mxk39fmrP3/k39S7r/jv4s3X83+v1T8m/lHOn+20ieA2vp917JvwHNsZOf
/T84eq3Xm7pR8q+j/pT/VnlzjuT3GXodeQBAlNMkjzO9uQXVf+n5b97x74lS
74x7ek2b/K469O+t6aX3+7w+8v//WJqRdw5D1qny8s4vSHSdEPrzQTWz4sxT
r/OHiX4X5OL3odfqP5V6PONgk96L17a8k/JX4yXKnCaVjlWkvnmn+r6kvxb9
W5k1YF+DCpl3tq3i65Ks66g/FLxXvuga9cm+envW+1ua+h1fHp0HvPdZAb3/
o/f5giWl+77nMQF6BdB8uh5k8hijx5D4u0Cdhyv+nlC/i4+/Q9S8Lvk9I8f+
7npH8vPOm0u9M+7NLaN7c5l7Jr9r/qt0Plt3SeezNU46n6s3HPYSupqQdw5L
1qmy8s5PSrSuTOjPA9Xciq9/9Bg6TPQeLNf3rv1Novvkm/DM9H3CuRDlvvT8
MX4+aBWpd96psp551vveZgnY1yCSeefHI6X3Iuu9ktdK972U+t+T91o+KN33
YuqzSMnrKB/3CQ9jxefKvXVVwXvly6YyOgPv7VmfC9RsT58DTGZ7S8vouUk2
kNHPi+hcJ8n7aneT0fef63cLyXtzdf6w3nvbz5PR98P33juv8wT03m+v308k
P7t63t97P7+tOaDO7e/XDwCl6DPZyX3NFyxuW8/Jsr7b0Wd+432+3mMa7+v1
2ie5n9fnh+N9vD5XHO/bj5DOfl2fwUju0/W+lHhfrs8BxftxfaY53n/fL9nn
Hh9Itf21Pl+dl3deUeF3apNez2b16GIuz0Us9Z38XPV+X1jmc9XvZ6rfz1OZ
z9Kw553DlHWqvPs79Xvob0j0vrk+d39S8p/xpJpR4xLv+UcynHmnylp7xHZp
Vrimp9fkir6/vcfRfvKc3vOlMvfGpB330ip5LOyt3nOu3koeL3srefzsrSMk
+7nxtPO2rHO4tEoeh3sreVxOq95zv2T1ZlDJ0vM6H38LWaXPh2iGkTzGriL1
zzuV9p32mu42NWPAvvrlc70inf8o+fev380m/+b1+azev/Pev23N4pJ/y7pO
avLvdx/J/5v9iXT/XZ4t3X+Heu+Lq8+7Hjezsk6tywf+zdql19Bp94r0/u9U
udL9s372lu7nTQCAAstL975m1aDd1EPyuqP3HCN5772ea8bnFetL55xinOTn
nef4eiEF0taU7b3X0+baowv4eVm1os+xxJ8lfX5L76dO/o6HMe8ctqxTlVmv
SP/u9Zxfnxt0dS5X598R7Enbt94XtKPBnSb+rnX0u8BhfM5VpeWdw/paMFra
85lamkO6/ru4VIZv/s4kvX/7VEl/bXeamiFca31hffZuY8X+Z11/p5qt3iX5
1yd1WQcoOS9YfJ+I/k/yzmq1fT9vAgAUWFa69zGrhW2nER6Q/OP0WeFa66Ln
mHl9au0u0Xe+Ns7px/h4UTU3pwx33jmMWacquz670vue9f4iF/c41/33BDs0
B+ndlz4WtKPBTWTqV+LvOkfvsVveyyuzS+8P7H3P+XtvPlvPcaaVPluad5/T
KjIceafSzFNzrLTXqc9+TxuutdLIO7udI3Y/71dLtI6q0hw879rkQsevrayZ
JLtHX8dMLf2evmi9OP3Otfd+9+ul+/54fQ9676fXa9bkfb763UXv/fqHSvH6
bsn1XuOK1wDerOf1kHcCsGkZ6d7HrB62nUZ4WPKP02eGa63L1FKcd+4x8m/1
O8yqazHO5uE11d0w553DmnWqfvLOmH4X9Hexe046DL8rVKcZoc5lkfxbfzlo
R9Xpugy+7lnR79c28vOyrHlRRh8/Jw7aEXxw8Teh2cSGJcZeRYYn71R6j6zO
IZj2mm8xNU241koh7+x2vtj5vOu98Wv0bDvtfvlk1WWeRz2ny+rxo5HSaz7N
9vQ5wN45B3rnJPisjJ6vRDPV5D3ldf87GYQ+E0PeCcAV3b8m9zG9xxz0r+g4
fX641rrotVhR3rlfz8/oOXhv5lW2Pun01QyHYc07hznrVIPknUqvz/Q76eeF
vBP9eV26/9b/K8O/Lo/O763HNx+Zp67fsYyfl1WZ7ic0o02+328F7Qi+2PzM
6z5D50SdVMoZtrxT6XdBem9e2uu/UaLv4euKvLNb1fv+9bxK7/tL+15I17PK
uzYZ6+g19Uuzx6LrqN2DdTc8yDsBuKTzUSb3MWuFbacR9Jwt79j3u3CtjaLX
4Hm9HpLyM1NJ9PxCv+s6TefwdQyLYcw7hz3rVIPmnTG9BjtCqs/rMEy/M1Qz
TkbvT2cO2ZAlmld809TT4j7z1OvhYfid6bpEve/1k0E7gg+ac9v4nOvnRddv
6nftnmHMO5XuQ34t6b8LPT5PHq61XOSd3XRe2UE+7+9IdD6Vl22Pk/xrk1Ms
v5ZBFa2DoLVjsO6GB3knAJcWl+59zNph22kEzTPzjn03h2ttFJ3zJa/XI3N+
9nMSvZay5zhTOnkFw2XY8s4mZJ2qat4Zm1+iv2/yThTR5zN796dLBe3ILl0/
eCuJ5gBzmXme4esFVaDfG9f5OA839L60qp/va6QzZ2G/hjXvVHoP628l/Xdy
rdQz8yTv7Kbry/XzWddnu3X+xzlKbPs/kn9tcoLF11GFnhMW5Z2bB+tueJB3
AnBJM6vkPmbdsO00wk8l/9j3bLjWRtE55fJ6Pbbg5/V7ep3jU5/DKjrXYS6z
4co7m5J1Klt5Z0zn/dC538k7kUXvX+rdn24WtCN3NO/T+21eEft5p14jL+bv
pQxE39fe9/qSoB3Bh8lk8M+1Hj+qzh81zHmn0szzKsnOgScL11oq8s5uurZN
2c/73yR/7a1euuZO3rXJ0VZeQXU6z3tR3rlmsO6GB3knAJcWle59zHph22mE
70j+sU+fA58iWHfdnpH8Xk8suR2dQ1ufx8qau/8jq10Pr2HJO5uUdSrbeafS
+9t0rrUyWT95Z/v8SEbvTw8L2pF7+jexgakLJHp2wFbmeZHPFzEAXZu2973+
UdCO4IOex/X7WdZ1rXTOwkksjD/seafS3+GfJP13dZnU63ty8s5ueh9u0edd
zyP1OYAJ+9y2PvOed21yePX2rfiKFOedCwTrbniQdwJwSdeCS+5jNgjbTiPo
urJFx7+6PNeo64Dm9Xl6n9tbzdSDMvqc5z1L/Q67Ycg7m5Z1Khd5Z2x2idYg
+1jIO9Gxi4zen/46aEd+aY6hz/FpZqHzRFfJO9+Veq9Jq3ls73vNnG3Np3OZ
l/0M69+Azns+vcXxm5B3Kp3r6C+S/nvT+6TrknmSd3bLyqmr5vq6rp/eF5J3
bXJgxd5tOUDy+3xf6jk3Q92QdwJwaWHp3sd8KWw7jaD5R1HeuUuw7ro9IPl9
nj3ANvUZJT0X0fV148/VeBvNNkDd884mZp3KZd4ZW9HUP4W8E5HPy+j96UNB
OwpH12HReU/SvgsrW3Wea+cxGf1erxS0I/igGXyZz67mQp9zMH5T8k6l2fEN
kv77O0f6vz/QBfLObvqMeu97pb8TnaNzlgrbnVyKr6H2qbB9m86R/D4fDdbZ
cCHvBOCSzpOe3MdsFLadxtA5OvOOgT8P11qXuyS/zwsqbHtuU1dK9Ll6pVqb
jVHnvLOpWafykXfGNpRobWbyznbT+7h671HR//1TIZsKTDOLLST6nq3fvPOQ
AP2WoevHp93Tw9968+l7nPeZfVjcnlM3Ke9U00l0zpH2u9Tv3kNnnuSd3XrX
K/2DRM8MVqWfg6K8c1cL49ig8/Dm9Vn3uVjqgrwTgEufke59zJfDttMY50n+
MXBcsM66/UPy+7zMwhj6jPtfLGynCeqadzY561Q+8041ranjZPRzvE35faKc
+2X0PnXjoB3Vg65DcoxEv4+yeecvgnRabBMZ/R7fG7Qj+DKDpH9Wnze1jbjP
55qWdyo9Rt4u6b/XMyV61jkU8s5uev2g74vu79a2uF3Nvoryzh0sjjco/azq
d1t5fe4frLvhQt4JwKX5pXsfs0nYdhpjWyk+Xn8mVHMJ+vxQXo9XWRpnUkvb
GXZ1zDubnnUq33lnTPevvxXyzrYaK6P3qacE7ahetpTymedvA/VY5FQZ/R6P
DdoRfJlJuj+jmn38VKL5G3xoYt6p9PeqGVrafqDsGpoukHd2u1iiOZptZ9C9
58lptZXlMQeR9l1Xb9VlrYa6I+8E4NJ80r2P2SxsO42hz7jpvV15x8E6zLf9
R8nv0Wc21AZ1yzvbkHWqUHlnbDlTf5fm/V6RT8/Ze/epjwXtqNiqpvZOlI11
pPPoXNZl8s7rHfcxqEdk9Hu8XdCO4Iue58WfT/1ueEHP4zc171Saf+j98Wn7
gh8H6om8s5ur+5f1urQoR9zc0dj9SPuuK1m6ZtNEwbobLuSdAFyaV7r3MXU4
hjRFMmNJq/vCtfY/v5P8Hm8I11oj1SnvbEvWqULnnUrXmA09/xj80r+xtP2q
jTnOXNH7T5P7hCU9jFm0zlc8N1zdLCvp7+/cIZuCN7Oaukmi77NCaHLeqTRP
zlrj7MgA/ZB3+qHr6BblnaHX1tUc8xnJ77HK+gdtQ94JwKV5pHsf85Ww7TTK
jlJ8zPZxLZnnUsnv7x/hWmukuuSd+v15W7JOVYe8E+2ka/P07lePCNlQgd68
85sextxLivNOG3NJ26bP1va+tw8F7Qg+TSRh799qet6p5jD1uKTvEw7x3At5
px96XVR07bRWsO4ia0txj+sH6274kHcCcEnvQ0juY7YM206jTCnR8wx5x8Nz
g3UXuUDy+7s7XGuNVIe8U7POp6U9Waci70Qo+uxl7371gaAd5evNO8/yMOaq
Upx3/tRDH/3Q+7Wfk9Hv7U9CNoVWaUPeqeYy9aSk7xd8zgtF3unHClKcJa4S
rLvI2ZLf30vCugX9IO8E4JKeRyT3MaHnE2yaEyT/mPiWRPv5UIqO2XW+Lh9G
ofPONmadirwToawo6fvW1UI2laM37/Sx1vgyUpx3fttDH/3Qe3fS3lfWp4Av
bck7lZ67PCvp+4bveOqBvNOPVaU471w+VHPGLKbeyegrrmOCdTecyDsBuKTP
iiT3MV8P207jjDH1ruQfF48L1ZxxWk5fWk+Ea62RQuadbc06FXknQtE5W3Xu
iN596/khm8rRm3dqr1M5HnNtKc4765YP6/vX+54+GLQjtE2b8k61gET3VPfu
Gz42tauH8ck7/SjzrPgSwboTOTSnLy1dq3aeYN0NJ/JOAC7NLt37mK3DttNI
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
2TdsO62neZiuy1503NV5svs5T8vy2RJjbWBhHESq5p1knYMh70Rd6XPR+sx3
2r5X1xQOvX5R2+jvW59XT3s/9H1aMFxrQBfyzvL2lvTMU+8xKDs3BXmnH7+V
/GuSGy2ONY+pmwvG09L19KawOC66kXcCcEnvL0nuY/YL2w4kek+OkOI5PXXt
wMOl2r0mCxSMocUatPZUyTvJOgdH3ok60zmcs/a/Oo/JAuFaa5VFTb0s2e9F
1fXlAJvIO/vzbUnPPP8tUe5VhLzTj2sl/5rkegtj6PzY+rfySsFY+nz7flLP
+bSbhLwTgEv6XHRyH/OdsO0gYVlTd0pxHvmYRM89DvKM+1wltv/1Ki8CXQbN
O8k6qyHvRN1dKtn7YP3bt3E/P7LpeoD6e856D04P1xqQiryzf0dKeub5lKkx
BT9L3unHXyX/muTqitvX59r+VjCG1sOmlqk4Fsoh7wTgkn5nldzHHBC2HfTQ
+QYOluK1jLR0zcJvSn/PXMxcYrscd+wZJO8k66yOvBN1N43kf7/1H4nWdId9
miU/Idm/+39JtLYjUCfknYP5gaRnno9K/rrb5J1+/F3yr0l+M+B2ZzV1mmTP
zRyXzp19lqnpBn4F6Bd5JwDXkvuY7wbuBek0J/u5FB+n4+vi4yT6DrPIJ0ps
71sWX0fb9Zt3LiTR+0nWWQ15J4aB7h/02cqsffFLppYO1l0zrSDRWs1Zv/Oy
z7oCvpF3Du5YSc889Z6+WTN+hrzTjzsk/5rkoj63N8bUyVLuvpH7TH2x6gtA
38g7Abj2kXT2MQcF7gX5dK2EMyVax6LouK31gKnvSfRMxsQp25uixDb2dvZq
2qefvJOs0x7yTgyLJUy9Idn741dNrRysu2bRtfjelPx8ucz3hkAI5J2D02fb
TpH0zPMeUzOl/Ax5px+aOeZdk5xTYhv6bNxmpq4x9X7B9rSek+j5uLTrJLhH
3gnANd3Xx/uYQwL3gnL0++ejJVpbskzuqfWaROu6nyTRsWRFiZ7dKfo55jiw
p2zeSdZpF3knhsmGkr9ena6hsEew7ppB14jKe15Cc9AVgnUHFCPvrEYzT52X
Ny3zvMvUjD3/nrzTj8ck/5rkZxk/pxn15qZ+Kfn37CfrSVO7m5razUtBSeSd
AFzT777ifcyhgXtBf/Q7zI1NXS7lntUYpA7z9mqar0zeSdZpH3knho1et2mu
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
+sx26ONxk+uM8m9FX/RcV/OCdSSab0zvv7xeouti39fiOr/AQaZmcvRaAUXe
mc1l3qnPf+uaLdNKtM9Z3tSWpo4ydY1Ea5qX3Vfca+qrA/Rgiz4L+HJKX8NQ
IX9vbaLPoCZ/71Xn+kPzhcg71VSmHsgZW2sfh+PboMeT0OfpTa5Ly78VAAA0
Enmn2zq1/FthRd55t87zvkZG6edA15XSOYYOkSinvVWiZ07LXo+PN3WgsJ4t
3CDvzFY27wxRuvb6byWaCyM0XU839O9j0PqDg98HRtO1s5K/d+ZvQZFQeafS
+R7z5kp+Qep9bzh5p9v6Vfm3AgCARlpXwh+Pm1wnlX8rrLB93q33Q+laGToX
+7icbSfrYVOLV3gNQBryzmx1zDv/JdEa7VM5fN39+rWk97pRoH6Oz+gnrfR4
MmuYNltF189K/t5nCNsOhkDIvFONzRlfa3cPPQxqOQl/nt7kOr/8WwEAQCPp
GoGhj8dNrqPLvxVWuDzv1uda9fNyY84YcWn+sm3F8YAk8s5sdcw743ra1B8l
mu9X768Mtd61zsP4Tkp/r0k0B2kIy6T0k1ffCdNmq+wo3b/zGcO2gyEQOu8c
I9H5ZlYPd3roYVDLSvjz9CbXmeXfCgAAGunz0n1sfFfCHJObWgeXfyus8HXe
rdt6NmcsLV27ZE+LY6LdyDuz1Tnv7C09xui8n7oujM85f7+R0Y+rNeXKelzK
/+7uC9Rjm+wg3b/zT4ZtB0MgdN6pLsvpQWt+T330i/XZ3daPy78VAAA00sLS
fWwcm/i/6f0w00v0DN28puaTaK4grVVMrS7RvI+bmdrC1E4jta+p/U0dKtH9
jcdItCaulj5boeeGupbvtRLd93PbSN0v0brjT5l6SaJ1JUKfK1Qt33mfz/Nu
/WxcmzNeXF+zPC7aibwz2zDlncnSvs81tZD9X8kof8zoYQ0PY+c5Wvr7nS0V
ps3W0Dmsk7/vT4VtB0OgDnnnpjk9aO3nqY9+zSHd58z6XVh8nfEFia4zdN4t
vc7YXDrXGboOk15nHCLRPlQrvs44T6L35DcSnaNq9V5njJPoOuMlCXNt4KuO
Kv1OAADQTJplJo+N14dtJ9PUEuVrM0uUvcalee2SMvr8KK5NJDpP6j1X0tJ1
WPdPVJzPxqXPX57+/9q7E/jbpvr/4x+u4co8/TPPJYVCZKhciQj5mYnET8mY
qSKh2/CXkkwNlEREZEiUoriZyhAJmblK6CfJPP14/Nbnse957H3O9+x91j5n
7/VZe5/X8/H4PB6/X91z9ufs72mdfd5n7bVkYlbbKd0/onMtdaUk11K6V3n2
fO5Sx8koEPq6e5Kr0wuOqaX3kK5Ww7ExXsg78/nmnc9K8rvVMKVjra7Lq+ut
bSLJfuH625auUXypq7959tCvdL8NzT3rypYWkWQ87j3uE5KMYZbeKeXO1Uk2
bY6N3aT7fC9i2g2aIIa8U9dJfqmgjwsD9VGW9p29Zv6DcS+93zM63y10HXv9
TqGffdtmSq/xs98rDpTu7xVfke7vFdnvFLovaPY7RTaf1bpG0pw2m9V2Svei
6mS2efNDDqn0DAEA0Dy6btlrkn42PmjbTuPpvZHZa40PBD6+xXX3zK7OLziu
1p9dzVLT8TEeyDvz+ead/6m5D13rUH9j+q4k38XK5p5PSXKvQNUOzDleLNnh
3eJ/jvS77aw2bY6FXaX7fLNHFAaJIe9U1xf08WjAPsp6XtJr5ieMe2k6zVez
30F2sm0HAIAo6LyczmejZp/z2rbTaDdK97XGioGPb3Xdrb+L/7Xg2FoH1Xh8
tB95Z75Y8s4snTe5ufjtb9Zbx0myP1pVbsk5zjoVHmMUU6Xc+bHaT34cfEy6
z/Xitu2gAWLJO48v6EMr1mt7/b0ne93MnOrh/Vy6z+V7bdsBACAKv5fuz8f1
bdtpLJ0r+5x0Z8dzBu7B8rpb7/l5veD4Ot9rjpp7QHuRd+aLMe/M0tzzEc8e
O6X3t89cwbFXzHn+hyt47qq8Tcqdm4ts2hwLO0v3uV7Cth00QCx55ycL+tBa
NWAvZeiandnvIJvattNo+rmWPZfL2rYDAEAUfiTdn4+H2bbTWGtL93l8yKAH
6+vu0wqOr7VfgB7QTuSd+WLPO9V84re/WbaOr+C4X8557q9V8NxVul38z8sr
kqwdgOrp/nrZc72UbTtoAOvrro5NCvrQ2jxgL2V8W7qvnY+ybaexlpTu8/iC
sI4UAADqs9L9GXmFbTuNpWuTZ8/jpQY9WF93LyP99wXp1G0BekA7kXfma0Le
qfS71yVSLvPcccRjPpDzvLHNdfq8lDsv+9q02Xr6fsue52VMu0ETWF93daxS
0IfWrgF7KWN/6b52vtq2ncbSsSt7Hm+1bQcAgGjonoPZz0hdO/xNph0101XS
fR4t5g/FcN19YUEPWm8J1AfahbwzX1PyTjXZ1Z3in+vpvrMLD3mstXOe867h
26+N7gVcJu+8yabN1tP9srLnmftBMUgM111q0BiyV8BeylhPuq+dX3Q1l2lH
zXSGdJ/HM027AQAgHgtI9x7tWlubdtQ8C0lyj2H2HG5n0EcM193bFPSg9ZlA
faBdyDvzNSnvVGu4ekP8s71h72s/Oef5jhih9zpphlkm81zJps1W08/t7Dle
3rYdNEAM111q0YI+tGLdM1KzzVfF/vq5yfTeCV0jP3sODzbtCACAuNwj3Z+T
Z9m20zh7SPf507LY1zWG627do+mlgj4uDNQH2oW8M1/T8k51vvjnevr6yq5X
qd///ifn+VYYvf1aHCLl8s5jbNpstd7f62J9ryAeMVx3qd7PyCb91vwX6b5+
Ps+2ncb5gEz8DrK2aUcAAMTlVOn+nHxWkv0l4Oca6T5/9xv1Ect19/UFfTwa
sA+0B3lnvibmnRtIuWzvwJLP/+Gc57m5gt7rovtNlJn3+nepZg97pPTeluw5
fqttO2iAWK67lizoQyvm/SJ1Ln7vd5B5TDtqljOk+/w952o2y4YAAIhM7zrX
WuyH4OdtMnE9gNONeonluvv4gj605g3YC9qBvDNfE/POmSS5/84327um5PP/
JOd5Yr/H7zoplwNvZNNma+nnZPb8rmjbDhogluuuFQr60NojYC9lbSUTv4PE
ut5obOZ29Yx0n7vfmnYEAEB8FpGJmZ3eXzKTZVMN8R2ZeJ22jVEvsVx3f7Kg
D63Y9kZG/Mg78zUx71QXiH+u92qJ59U1NZ7v8xyvi806I2XoXsVl8s6zbdps
rS2l+/yyRioGieW6a82CPrSsrkt9zC8T18C/TfgO4qN3f3utWNdqBQDA0rUy
8TPzI6YdxU/3Ddb7Rnr3t7faWzKW6+5NCvrQ2jxgL2gH8s58Tc07j5Ry2Z6v
nXMeP62ivuukvz1qLut7Tl6QZH4PqrGFdJ/ft9u2gwaI5bpr04I+tNbp8xid
E3pCRXXsiP1fJRO/g2wy4nO23SRJ1s/qPW+sOwwAwES6PlrvZ+YfTDuK3/+X
iefsEsN+YrnuXqWgD61dA/aCdiDvzNfUvHMXqSfv/FXO4z9VVeM10+/9Zc7L
7jZttpL+Fpc9tyvbtoMGiOW6678L+tBaqs9jpgx4TJl6ecT+dX3R3uvpaSM+
Z9t9VCaes7+YdgQAQLx0rfPee9q1trRsKmKLysQ1c7R2NOwpluvu5Qr60GJd
JpRF3pmvqXln3p5Co+SdOuf+tT6P1fvhy+7xbmVPKXdeppl02U6978lVbNtB
A8Ry3XV0QR96H1K/e8OnFDwmdN65hCTjNHM8/czq6h6ZeL6OtGwKAIDI/UYm
fnbe6WoWy6YidYpMPFdPuZrDsKdYrrsXLehDi7WFUBZ5Z76m5p3rS/V55345
j/1llY3XTHPZfpltXume7stYNNpCvfcEv9O2HTRALNddResh35DzmCkFjwmd
dyqdm99vviLfQSbSPWV7z5V+bixr2RQAAJHbViZ+fmp9zrKpCK0l/X+HPsWy
KYnnurs3m+qtzwTsBe1A3pmvqXnnhlJ93vnHnMfuUmXjAVwu5c4Nc3qq8SHp
Pq/vsm0HDRDLddcjBX2clPOYKQWPscg7876D7F3Bc7eJzinQ+RW95+kqy6YA
AGiA2Vw9KhM/Q/VeGNa/Tug9JDdL/99Vrdf6iuW6e8mCPrT2C9gL2oG8M19T
887etRJHzTvfkvM4PT9N29NH1+Qsc250z4qZTTptl42l+7yubtsOGiCG665B
99RskfO4KQMeFzrv1O8gj0v/e6cWr+D52+Jc6Z8Lb23ZFAAADXGY9P8cvVqS
vQDH3VTpf35+Y9hTRwzX3WqFgj609gjYC9qBvDNfU/POQftrFOWd+t1X11rU
z6tzJFl3pege8Gcl+Z3qbEnmQm4vyb3Kb6rrxXnS9/X7XH1Ckv2Nf+HqXil3
P3unXnR1q6ufuDrC1TauVpLkNzr4+aB0n9M1bNtBA8Rw3VX0+8grruYK1EcV
jpL+19i6F2i/NUjHzQ7S//zo5wbf0QAAGGxe6X+fhNbhhn3FYB1JsoV+52Zj
w746YrjuVmsW9KG1TcBe0A7knfmamnd+UcrleV+S5He3p0o+rqh07Uu9D/QK
VydL/XMkdb7gmZLcd/90ha+jqDQ7vdvVRZJ8V0a+3jUW1rRtBw0Qw3XXzwt6
OD9QD1VZQJLPqn7X2Z827CsG+jvfk9L/3Oxr2BcAAE2j3yv7fZ7q9+r3G/Zl
Se8X+pv0Py/T7NrqEsN1t+rd86G31unzGJ0TekJFdWw9LwuGyDvzNTXv/Jn4
Z3Y6d3F6iX8/bNW9L8ZuAV5DUZ1R8+trug2k+3y9x7YdNID1ddciUjwfvIn7
m39d+l9rvyDju8aEztP/nfQ/L/rdxPpeBQAAmkTneD4h/T9X9T9fzq41E7qm
0HXS/3xovdeutS7W190dg+5TXarPY6YMeEyZqmIdKcSFvDNfU/PO6eL/v+lp
Jf89eSd55zDWl+7ztbZtO2gA6+uurxYcX/c2b+I94AtK/jzGh10tZteaGf0t
P+87yF6GfQEA0FR630jeZ+sdrha2ay0ovb9R10PLOxcX27U2gfV1d8fRBX3o
3lf9rr+nFDyGvBPknfmamHfm7S2UV3rPwYGSrJ9cZ9V9P/u7Kupz2Ar5OdBE
ev9K9n23rm07aADL6643u3re8Ph1Oljyr7tvkvGaz3iI5J8LXauENZoBAChP
5zTeJvmfsbe4ms+su3B0Tbe8c6DZ3bJ2rU0QS955QUEfN+Q8ZkrBY8g7Qd6Z
r4l5p+4ZVOZ/06vYtIkxo/dqZN9369m2gwawvO66qODYl9d87LrN7uoeyb/+
vnzGv2m7nSRZryDvPGxk1xoAAI33bkn2dsz7nNV7vOc1665eOgfxOMl/7VpH
mHXXXyx55yMFfZyU85gpBY8h7wR5Z76m5Z06F2W6+P/v+Q6TLjGONN/Mvvfe
Z9sOGsDqumu/guPqXmhL1HjsUHQ93aKsT39bb/PcRt3bU9euznv9Z9u1BgBA
awzK/HSe55vNuquH3tNYNK+z87pns2owRwx556IFPWhtkfO4KQMeR9453sg7
8zUt7yz6nt6vdrdpE2NI99LLvvfGdX9G+LO47tI5f6/nHFPzwY1rOq6F70vx
tfhl0s5723eT4vkmj0tyXQQAAEYzpyTza4quN/Sek5WsGqzYPK4ukeLXq+sl
vd2qwQIx5J27F/Sg125zBeoD7ULema9Jeecyrp4R/6xzurR7/g7iovsTZd9/
U0y7QROEvO7S3+K/4OqNnONpBtq2z0a9Jr9Piq/Jr5X27Cmg95YdJcXzWrW2
tmoQAIAWWlmStSqLPnv/Lflz95piRUn2syx6nVr7WjU4QAx5588Lejg/UA9o
H/LOfE3JO/V7661Sbm7nZiadYlytJd3vvw1s20EDhLru0vfmDQXH0t+Td6jw
eDF5jySfc0XX5Q9Ksh9ck83h6kwZ/B3kNKsGAQBoMZ23N+gz+FVJ7n+fbNTj
KHaUZM2jQa/xdKsGPVjnnYtI8pt0Xg+bBOgB7UTema8JeedCrq7P6SuvfmzS
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
RFevyehjyutVvCAAQNTIOwGEcJuk48y5xr0AAMIYNe/UXEPzjfk9jkXeObwl
Xa3jaltXe0myz8nhkuyF8nlXh0iSN+/gagNXb3M1j0mnaLJR884Off9dJqNn
ngCAdiPvBBDCnyQdZ84z7gUAEMYoeeflkuQavsg7/cwuyZoAX5dkP5hR7hF+
XpL1uS90dbSrj0uyP/OsHn1MH/KYz4l91voFGa730yyajUhVeWeH7hV+hwz/
/p15yOMCAJqBvBNACLdIOs78zLgXAEAYw+SdujfJFkMci7yz2NqufuDqWRl9
XtygekWS3znXKejngRGe/9MjnYnRTHb1z5y+BtUpBv3GpOq8U+kaFzr3eJi/
SdH6GACA5iPvBBDCTZKOMxcY9wIACKNM3vmMJHuSzDbkscg7+1vX1VUy+Pw/
4uoXrk6W5F72A13tO+P//oar77uaJuXmg+5U0JdmTW+VJNv+rCRzH6+VZM7o
oOe9x9VMQ5+R0ezl0d8Trn7j6iRX+7ja0NUSFs1Gpo68s0PXvDhGkn3Xfd+f
s1dwXABAvMg7AYRwo6TjzEXGvQAAwvDNO3Xe/zIjHou8s9vcksznLDrvV7ra
w9WiJZ97OVcfc3WJq5cKnn/XIfr+6YCeO7XxEM89Kr3/+X6P3vYy6K0J6sw7
O1Z2dYX4vYfmqPC4AID4kHcCCOEPko4zFxv3AgAIY1Deeb2rd1d0LPLO1Ntd
PST55133elmpomPNJcnfud/96Z8Y4vl8885fjNr4ELb17I28s78QeWfHZq7u
luK/05w1HBcAEA/yTgAh3CDpOHOJcS8AgDDy8s4nJcmEJlV4LPLOxPtdPS39
z/sLrnau6bh6f7r+vV/MHG/vIZ7HN+983dWyI3ddTnZtHvLO8kLmnUrn4+oc
48el/9/Jet8rAEC9yDsBhHCd2M7JAACE15t3vurqBEnW2qsaeafIuyR/PyJd
d7OqubRF/pg55jD7CvnmnVrHVtCvrw1K9EXe2V/ovLNDx5tvSbKPVvbvNF/N
xwUA2CLvBBCC7kGQvY8OANB+2bxT92+p6h7qfsY973yzq8ekf/6mOU/RXulV
+mHmuIcM8fjevPN3kp8rPiXh1mC8vOfYvyroi7yzP6u8s+Mtrn4u6d9pgUDH
BQDYIO8EEMLvJR1nfmncCwAgDM03/uzqAwGONe55p/6WmJe/DTPPclgHZY77
+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
BAAAAAAAmIi8k6KaWeSdAACgcv8Hf9habw==
     "], {{0, 480}, {1340, 0}}, {0, 255},
     
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{429.980624999999, Automatic},
   ImageSizeRaw->{1340, 480},
   PlotRange->{{0, 1340}, {0, 480}}]], "Input"],
 "\n\nThe CHSH Inequality states that:\n\n-2 \[LessEqual] S \[LessEqual] 2\n\n\
where\n\nS = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") - ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")\n\nThe graph above shows a two-channel CHSH inequality setup. There are \
one waveplate in front of each PBS (a,b) which can be used to change the \
polarization of the photons (\[Alpha],\[Beta]). Typically the angles are \
choosen as the Bell\[CloseCurlyQuote]s angle to maximize the violation of the \
inequality.\n\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "= 0\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 45\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 22.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 67.5\[Degree]\n\nand E(\[Alpha],\[Beta]) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SubscriptBox["N", "++"], "-", 
     SubscriptBox["N", 
      RowBox[{"+", "-"}]], "-", 
     SubscriptBox["N", 
      RowBox[{"-", "+"}]], "+", 
     SubscriptBox["N", "--"]}], 
    RowBox[{
     SubscriptBox["N", "++"], "+", 
     SubscriptBox["N", 
      RowBox[{"+", "-"}]], "+", 
     SubscriptBox["N", 
      RowBox[{"-", "+"}]], "+", 
     SubscriptBox["N", "--"]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for each \[Alpha] and \[Beta] angle settings. And N is the coincidence \
counts in each (D+, D-) detector. For example, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "++"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") would means the coincidence counts between detector D+ abd D+ with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " set to 0\[Degree] and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " set to 22.5\[Degree].\n\nNow if only with 2 detectors (instead of 4 in the \
above setup), and we use 2xpolarizers or LCD+PBS setup, then each angle \
setting (i.e. \[Alpha] , \[Beta]) need an extra setting at \[Alpha] + 90\
\[Degree] and \[Beta] + 90\[Degree]. This because the detector at each side \
(A and B) will need to act as two detectors in the sense that the \
+90\[Degree] setting will effectively switch from D+ to D-. By choosing \
\[Alpha] or \[Alpha] + 90\[Degree] the detector can act as D+ or D- at will. \
Thus we have new definition for the angle choice:\n\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 0\[Degree] (D+), 90\[Degree] (D-)\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 45\[Degree] (D+), 45\[Degree]+90\[Degree]=135\[Degree] (D-)\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 22.5\[Degree] (D+), 22.5\[Degree]+90\[Degree]=112.5\[Degree] (D-)\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 67.5\[Degree] (D+), 67.5\[Degree]+90\[Degree]=157.5\[Degree](D-)\n\n\
Therefore we have:\n\nFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "++"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 0\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 22.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "--"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 90\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 112.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"+", "-"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 0\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 112.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"-", "+"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 90\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 22.5\[Degree]\n\nFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "++"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 0\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 67.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "--"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 90\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 157.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"+", "-"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 0\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 157.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"-", "+"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 90\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 67.5\[Degree]\n\nFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "++"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 45\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 22.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "--"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 135\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 112.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"+", "-"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 45\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 112.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"-", "+"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 135\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 22.5\[Degree]\n\nFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "++"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 45\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 67.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", "--"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 135\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 157.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"+", "-"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 45\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 157.5\[Degree]\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["N", 
    RowBox[{"-", "+"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 135\[Degree], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 67.5\[Degree]\n\nSubstitute these coincidence values into E(\[Alpha],\
\[Beta]) = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     SubscriptBox["N", "++"], "-", 
     SubscriptBox["N", 
      RowBox[{"+", "-"}]], "-", 
     SubscriptBox["N", 
      RowBox[{"-", "+"}]], "+", 
     SubscriptBox["N", "--"]}], 
    RowBox[{
     SubscriptBox["N", "++"], "+", 
     SubscriptBox["N", 
      RowBox[{"+", "-"}]], "+", 
     SubscriptBox["N", 
      RowBox[{"-", "+"}]], "+", 
     SubscriptBox["N", "--"]}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and evaluate S = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") - ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")"
}], "Text",
 CellChangeTimes->{{3.6513765622096243`*^9, 3.651376570534582*^9}, {
  3.6513766375725107`*^9, 3.651376638844261*^9}, {3.651377193667635*^9, 
  3.6513772329369802`*^9}, {3.6513773305015163`*^9, 3.651377412262023*^9}, {
  3.651377546928124*^9, 3.6513775857574472`*^9}, {3.651377769303248*^9, 
  3.6513781399151*^9}, {3.6513782118339567`*^9, 3.651378515374261*^9}, {
  3.651378622724427*^9, 3.651378623034564*^9}, {3.6513786601007643`*^9, 
  3.651378670169022*^9}, {3.651378701145583*^9, 3.651379179799941*^9}, {
  3.651379235406129*^9, 3.651379450312566*^9}, {3.651380083028976*^9, 
  3.651380084112792*^9}, {3.651380157464168*^9, 3.6513801676873617`*^9}, {
  3.651380281246048*^9, 3.651380654586651*^9}}],

Cell["Define CHSH measurement in different angle settings:", "Text",
 CellChangeTimes->{{3.651380939228464*^9, 3.651380957290597*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"bellmeasurements", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox["\[Pi]", "8"]}], ",", 
         RowBox[{"Npp", "\[Rule]", "Npp1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Npm", "\[Rule]", "Npm1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox["\[Pi]", "2"]}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox["\[Pi]", "8"]}], ",", 
         RowBox[{"Nmp", "\[Rule]", "Nmp1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox["\[Pi]", "2"]}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Nmm", "\[Rule]", "Nmm1"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Npp", "\[Rule]", "Npp2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", "0"}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Npm", "\[Rule]", "Npm2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox["\[Pi]", "2"]}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Nmp", "\[Rule]", "Nmp2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox["\[Pi]", "2"]}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Nmm", "\[Rule]", "Nmm2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", 
          FractionBox["\[Pi]", "4"]}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox["\[Pi]", "8"]}], ",", 
         RowBox[{"Npp", "\[Rule]", "Npp3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", 
          FractionBox["\[Pi]", "4"]}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Npm", "\[Rule]", "Npm3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "4"]}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox["\[Pi]", "8"]}], ",", 
         RowBox[{"Nmp", "\[Rule]", "Nmp3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "4"]}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"5", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Nmm", "\[Rule]", "Nmm3"}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", 
          FractionBox["\[Pi]", "4"]}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Npp", "\[Rule]", "Npp4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", 
          FractionBox["\[Pi]", "4"]}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Npm", "\[Rule]", "Npm4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "4"]}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Nmp", "\[Rule]", "Nmp4"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]m", "\[Rule]", 
          FractionBox[
           RowBox[{"3", " ", "\[Pi]"}], "4"]}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", 
          FractionBox[
           RowBox[{"7", " ", "\[Pi]"}], "8"]}], ",", 
         RowBox[{"Nmm", "\[Rule]", "Nmm4"}]}], "}"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 Background->RGBColor[1, 0.85, 0.85]],

Cell["Define various E(\[Alpha] , \[Beta]) functions here:", "Text",
 CellChangeTimes->{{3.651380985882901*^9, 3.651381005321253*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EValue", "[", 
    RowBox[{"{", 
     RowBox[{"Npp_", ",", "Npm_", ",", "Nmp_", ",", "Nmm_"}], "}"}], "]"}], ":=",
    " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Npp", "+", "Nmm", " ", "-", "Nmp", "-", "Npm"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"Npp", "+", "Nmm", "+", "Nmp", "+", "Npm"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]EValue", "[", 
   RowBox[{"{", 
    RowBox[{"Npp_", ",", "Npm_", ",", "Nmp_", ",", "Nmm_"}], "}"}], "]"}], ":=",
   " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"EValue", "[", 
           RowBox[{"{", 
            RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}],
           ",", "Npp"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "Npp", "]"}]}], ")"}], "^", "2"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"EValue", "[", 
           RowBox[{"{", 
            RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}],
           ",", "Nmm"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "Nmm", "]"}]}], ")"}], "^", "2"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"EValue", "[", 
           RowBox[{"{", 
            RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}],
           ",", "Npm"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "Npm", "]"}]}], ")"}], "^", "2"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"EValue", "[", 
           RowBox[{"{", 
            RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}],
           ",", "Nmp"}], "]"}], "*", 
        RowBox[{"Sqrt", "[", "Nmp", "]"}]}], ")"}], "^", "2"}]}], "]"}], 
   "]"}]}]}], "Input",
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[{
 "Define S = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") - ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "1"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") + ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "(", 
    SubscriptBox["\[Alpha]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " , ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") :"
}], "Text",
 CellChangeTimes->{{3.6513810915596857`*^9, 3.651381113637694*^9}, {
  3.6513811591803427`*^9, 3.6513811609164047`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SValue", "[", 
    RowBox[{"{", 
     RowBox[{
     "Npp1_", ",", "Npm1_", ",", "Nmp1_", ",", "Nmm1_", ",", "Npp2_", ",", 
      "Npm2_", ",", "Nmp2_", ",", "Nmm2_", ",", "Npp3_", ",", "Npm3_", ",", 
      "Nmp3_", ",", "Nmm3_", ",", "Npp4_", ",", "Npm4_", ",", "Nmp4_", ",", 
      "Nmm4_"}], "}"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EValue", "[", 
        RowBox[{"{", 
         RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}], 
       " ", "/.", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"bellmeasurements", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ")"}], " ", "-", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EValue", "[", 
        RowBox[{"{", 
         RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}], 
       " ", "/.", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"bellmeasurements", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}], " ", "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EValue", "[", 
        RowBox[{"{", 
         RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}], 
       " ", "/.", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"bellmeasurements", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ")"}], " ", "+", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"EValue", "[", 
        RowBox[{"{", 
         RowBox[{"Npp", ",", "Npm", ",", "Nmp", ",", "Nmm"}], "}"}], "]"}], 
       " ", "/.", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"bellmeasurements", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"{", 
    RowBox[{
    "Npp1", ",", "Nmm1", ",", "Npm1", ",", "Nmp1", ",", "Npp2", ",", "Nmm2", 
     ",", "Npm2", ",", "Nmp2", ",", "Npp3", ",", "Nmm3", ",", "Npm3", ",", 
     "Nmp3", ",", "Npp4", ",", "Nmm4", ",", "Npm4", ",", "Nmp4"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.65138106719048*^9, 3.651381069292836*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell["\<\
Define the error in CHSH parameters using error propagations:\
\>", "Text",
 CellChangeTimes->{{3.651381125878648*^9, 3.651381156916198*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]SValue", "[", 
   RowBox[{"{", 
    RowBox[{
    "Npp1_", ",", "Npm1_", ",", "Nmp1_", ",", "Nmm1_", ",", "Npp2_", ",", 
     "Npm2_", ",", "Nmp2_", ",", "Nmm2_", ",", "Npp3_", ",", "Npm3_", ",", 
     "Nmp3_", ",", "Nmm3_", ",", "Npp4_", ",", "Npm4_", ",", "Nmp4_", ",", 
     "Nmm4_"}], "}"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Total", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"SValue", "[", 
              RowBox[{"{", 
               RowBox[{
               "Npp1", ",", "Nmm1", ",", "Npm1", ",", "Nmp1", ",", "Npp2", 
                ",", "Nmm2", ",", "Npm2", ",", "Nmp2", ",", "Npp3", ",", 
                "Nmm3", ",", "Npm3", ",", "Nmp3", ",", "Npp4", ",", "Nmm4", 
                ",", "Npm4", ",", "Nmp4"}], "}"}], "]"}], ",", "x"}], "]"}], 
           "^", "2"}], "*", "x"}]}], "]"}], ",", "tmp"}], "]"}], " ", 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{3.651381074819511*^9},
 Background->RGBColor[1, 0.85, 0.85]],

Cell["Testing:", "Text",
 CellChangeTimes->{{3.651381182876851*^9, 3.6513811949076557`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Mu]bell", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Alpha]\[Beta]", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ".", 
     RowBox[{"dm", "[", "0", "]"}], ".", 
     RowBox[{"\[Alpha]\[Beta]", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], " ", "/.", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"bellmeasurements", " ", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Alpha]p", "\[Rule]", "\[Alpha]"}], ",", 
         RowBox[{"\[Beta]p", "\[Rule]", "\[Beta]"}], ",", 
         RowBox[{"\[Alpha]m", "\[Rule]", "\[Alpha]"}], ",", 
         RowBox[{"\[Beta]m", "\[Rule]", "\[Beta]"}]}], "}"}]}], ",", "1"}], 
     "]"}]}], " ", "//", "N"}]}]], "Input",
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.42677669529663687`", ",", "0.07322330470336312`", ",", 
   "0.07322330470336312`", ",", "0.42677669529663687`", ",", 
   "0.07322330470336312`", ",", "0.42677669529663687`", ",", 
   "0.42677669529663687`", ",", "0.07322330470336312`", ",", 
   "0.42677669529663675`", ",", "0.0732233047033631`", ",", 
   "0.0732233047033631`", ",", "0.42677669529663675`", ",", 
   "0.42677669529663675`", ",", "0.0732233047033631`", ",", 
   "0.0732233047033631`", ",", "0.42677669529663675`"}], "}"}]], "Output",
 CellChangeTimes->{3.651380765203784*^9, 3.6513827092294273`*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"testcoinc", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"x", ",", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"PoissonDistribution", "[", "x", "]"}], "]"}]}], "]"}], " ", 
    ",", 
    RowBox[{
     RowBox[{"\[Mu]bell", "*", "1500"}], "+", "120"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SValue", "[", "testcoinc", "]"}], " ", "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]SValue", "[", "testcoinc", "]"}], " ", "//", 
  "N"}]}], "Input",
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "793", ",", "207", ",", "243", ",", "734", ",", "218", ",", "764", ",", 
   "758", ",", "247", ",", "797", ",", "206", ",", "256", ",", "729", ",", 
   "764", ",", "214", ",", "229", ",", "813"}], "}"}]], "Output",
 CellChangeTimes->{
  3.651380768121496*^9, {3.6513827019838047`*^9, 3.651382712435046*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData["2.1733199265775434`"], "Output",
 CellChangeTimes->{
  3.651380768121496*^9, {3.6513827019838047`*^9, 3.6513827124428797`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData["0.044765156136914806`"], "Output",
 CellChangeTimes->{
  3.651380768121496*^9, {3.6513827019838047`*^9, 3.651382712448997*^9}},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell["Input of the coincidences data from experiment:", "Text",
 CellChangeTimes->{{3.651381255298394*^9, 3.6513812695448112`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"0", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"22.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}}]], "Text",
 CellChangeTimes->{3.651382011258058*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Npp1", "=", "793"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382027940641*^9, {3.651382716366851*^9, 3.651382717779636*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"0", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"112.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, 3.651382055926989*^9}]], "Text",
 CellChangeTimes->{3.651382068541767*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Npm1", "=", "207"}], ";"}], " "}]], "Input",
 CellChangeTimes->{
  3.651382079610569*^9, {3.6513827253108597`*^9, 3.6513827263875723`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"90", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"22.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 
   3.651382084997498*^9}}]], "Text",
 CellChangeTimes->{3.651382113756206*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nmp1", "=", "243"}], ";"}]], "Input",
 CellChangeTimes->{
  3.65138212569762*^9, {3.651382729773843*^9, 3.65138273021938*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"90", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"112.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.65138213591415*^9}}]], "Text",
 CellChangeTimes->{3.651382145314805*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Nmm1", "=", "734"}], ";"}], " "}]], "Input",
 CellChangeTimes->{
  3.651382154784004*^9, {3.651382736750269*^9, 3.651382738147107*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"0", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], " ", "=", 
    RowBox[{"67.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.651382162857188*^9}}]], "Text",
 CellChangeTimes->{3.651382173546074*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Npp2", "=", "218"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382181594881*^9, {3.651382742663022*^9, 3.6513827438348007`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"0", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], " ", "=", 
    RowBox[{"157.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.651382192208756*^9}}]], "Text",
 CellChangeTimes->{3.651382203353435*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Npm2", "=", "764"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382212230598*^9, {3.651382748094071*^9, 3.651382767887142*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"90", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], " ", "=", 
    RowBox[{"67.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}}]], "Text",
 CellChangeTimes->{3.651382235838543*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nmp2", "=", "758"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382244372073*^9, {3.651382775277355*^9, 3.651382776569771*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "1"], " ", "=", 
    RowBox[{"90", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], " ", "=", 
    RowBox[{"157.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382254358996*^9}}]], "Text",
 CellChangeTimes->{3.6513822634552927`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nmm2", "=", "247"}], ";"}]], "Input",
 CellChangeTimes->{{3.651382273293476*^9, 3.65138227446937*^9}, {
  3.651382779069037*^9, 3.651382780065661*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], " ", "=", 
    RowBox[{"45", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"22.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382283029271*^9}}]], "Text",
 CellChangeTimes->{3.651382291334465*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Npp3", "=", "797"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382300595564*^9, {3.6513827858925447`*^9, 3.651382787266272*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], " ", "=", 
    RowBox[{"45", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"112.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382312452327*^9}}]], "Text",
 CellChangeTimes->{3.651382320480678*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Npm3", "=", "206"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382340018794*^9, {3.6513827897004128`*^9, 3.65138279103337*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], " ", "=", 
    RowBox[{"135", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"22.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382312452327*^9}, {3.651382370320841*^9, 
   3.651382370730648*^9}}]], "Text",
 CellChangeTimes->{3.6513823796032763`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nmp3", "=", "256"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382389129739*^9, {3.651382797867944*^9, 3.6513827981530952`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], " ", "=", 
    RowBox[{"135", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "1"], " ", "=", 
    RowBox[{"112.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382312452327*^9}, {3.651382370320841*^9, 
   3.6513823935858183`*^9}}]], "Text",
 CellChangeTimes->{3.6513824029306917`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nmm3", "=", "729"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382412424363*^9, {3.651382800876174*^9, 3.651382801745034*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], " ", "=", 
    RowBox[{"45", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], " ", "=", 
    RowBox[{"67.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382312452327*^9}, {3.651382370320841*^9, 
   3.651382421648428*^9}}]], "Text",
 CellChangeTimes->{3.651382428849641*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Npp4", "=", "764"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382439791523*^9, {3.6513828106681223`*^9, 3.651382811368801*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], " ", "=", 
    RowBox[{"45", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], " ", "=", 
    RowBox[{"157.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382312452327*^9}, {3.651382370320841*^9, 
   3.651382447263382*^9}}]], "Text",
 CellChangeTimes->{3.651382459288781*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Npm4", "=", "214"}], ";"}]], "Input",
 CellChangeTimes->{
  3.651382469429418*^9, {3.651382814227985*^9, 3.651382814656629*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], " ", "=", 
    RowBox[{"135", "\[Degree]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Beta]", "2"], " ", "=", 
    RowBox[{"67.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382312452327*^9}, {3.651382370320841*^9, 
   3.6513824753910513`*^9}}]], "Text",
 CellChangeTimes->{3.651382489080065*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nmp4", "=", "229"}], ";"}]], "Input",
 CellChangeTimes->{
  3.6513824988216543`*^9, {3.65138282257192*^9, 3.651382823656262*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Alpha]", "2"], " ", "=", 
   RowBox[{
    RowBox[{"135", "\[Degree]", " ", 
     SubscriptBox["\[Beta]", "2"]}], " ", "=", 
    RowBox[{"157.5", "\[Degree]"}]}]}], TraditionalForm]],
 CellChangeTimes->{
  3.65138075133854*^9, {3.651381279393323*^9, 3.651381295841135*^9}, {
   3.6513813535078287`*^9, 3.6513813537636414`*^9}, {3.65138140202493*^9, 
   3.651381403304516*^9}, {3.651381438885866*^9, 3.651381466711171*^9}, {
   3.651381502076044*^9, 3.651381502324049*^9}, {3.651381535130773*^9, 
   3.651381563651968*^9}, {3.651381598512864*^9, 3.651381598715135*^9}, {
   3.651381630559827*^9, 3.651381760429891*^9}, {3.651381804322358*^9, 
   3.65138197564671*^9}, {3.651382055926989*^9, 3.651382084997498*^9}, {
   3.65138213480077*^9, 3.6513822211761436`*^9}, {3.6513822539492292`*^9, 
   3.651382312452327*^9}, {3.651382370320841*^9, 
   3.651382502075944*^9}}]], "Text",
 CellChangeTimes->{3.6513825090873127`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Nmm4", "=", "813"}], ";"}]], "Input",
 CellChangeTimes->{{3.6513825216287527`*^9, 3.6513825226507893`*^9}, {
  3.65138282567664*^9, 3.6513828273202353`*^9}},
 Background->RGBColor[1, 0.85, 0.85]],

Cell["Evaluate CHSH S parameters using the above input:", "Text",
 CellChangeTimes->{{3.651382636174755*^9, 3.65138265314867*^9}, 
   3.651382691099498*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"SValue", "[", 
   RowBox[{"{", 
    RowBox[{
    "Npp1", ",", "Npm1", ",", "Nmp1", ",", "Nmm1", ",", "Npp2", ",", "Npm2", 
     ",", "Nmp2", ",", "Nmm2", ",", "Npp3", ",", "Npm3", ",", "Nmp3", ",", 
     "Nmm3", ",", "Npp4", ",", "Npm4", ",", "Nmp4", ",", "Nmm4"}], "}"}], 
   "]"}], "]"}]], "Input",
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData["2.1733199265775434`"], "Output",
 CellChangeTimes->{3.6513807730548162`*^9, 3.651382831196735*^9},
 Background->GrayLevel[0.85]]
}, Open  ]],

Cell["Evaluate the error in the S parameters:", "Text",
 CellChangeTimes->{{3.651382678925292*^9, 3.6513826887956247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[CapitalDelta]SValue", "[", 
   RowBox[{"{", 
    RowBox[{
    "Npp1", ",", "Npm1", ",", "Nmp1", ",", "Nmm1", ",", "Npp2", ",", "Npm2", 
     ",", "Nmp2", ",", "Nmm2", ",", "Npp3", ",", "Npm3", ",", "Nmp3", ",", 
     "Nmm3", ",", "Npp4", ",", "Npm4", ",", "Nmp4", ",", "Nmm4"}], "}"}], 
   "]"}], "]"}]], "Input",
 Background->RGBColor[1, 0.85, 0.85]],

Cell[BoxData["0.044765156136914806`"], "Output",
 CellChangeTimes->{3.65138077529643*^9, 3.6513828337067432`*^9},
 Background->GrayLevel[0.85]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1419, 855},
WindowMargins->{{-16, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 250, 4, 103, "Title"],
Cell[833, 28, 264, 5, 37, "Text"],
Cell[1100, 35, 1157, 28, 150, "Input"],
Cell[2260, 65, 382, 7, 37, "Text"],
Cell[CellGroupData[{
Cell[2667, 76, 754, 17, 126, "Input"],
Cell[3424, 95, 978, 14, 55, "Output"]
}, Open  ]],
Cell[4417, 112, 193, 4, 37, "Text"],
Cell[4613, 118, 773, 20, 161, "Input"],
Cell[5389, 140, 808, 21, 98, "Text"],
Cell[6200, 163, 323, 6, 37, "Text"],
Cell[CellGroupData[{
Cell[6548, 173, 769, 24, 114, "Input"],
Cell[7320, 199, 279, 4, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7636, 208, 3600, 101, 521, "Input"],
Cell[11239, 311, 18080, 309, 289, "Output"]
}, Open  ]],
Cell[29334, 623, 58781, 1052, 924, "Text"],
Cell[88118, 1677, 182, 4, 37, "Text"],
Cell[88303, 1683, 13925, 403, 1487, "Input"],
Cell[102231, 2088, 173, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[102429, 2096, 724, 19, 119, "Input"],
Cell[103156, 2117, 180, 3, 55, "Output"],
Cell[103339, 2122, 191, 3, 55, "Output"],
Cell[103533, 2127, 177, 3, 55, "Output"],
Cell[103713, 2132, 191, 3, 55, "Output"]
}, Open  ]],
Cell[103919, 2138, 799, 25, 160, "Text"],
Cell[CellGroupData[{
Cell[104743, 2167, 2415, 69, 169, "Input"],
Cell[107161, 2238, 497, 13, 61, "Output"]
}, Open  ]],
Cell[107673, 2254, 17848, 695, 1328, "Text"],
Cell[CellGroupData[{
Cell[125546, 2953, 678, 18, 58, "Input"],
Cell[126227, 2973, 193, 3, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126457, 2981, 873, 24, 55, "Input"],
Cell[127333, 3007, 206, 4, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127576, 3016, 971, 26, 56, "Input"],
Cell[128550, 3044, 207, 4, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128794, 3053, 301, 7, 58, "Input"],
Cell[129098, 3062, 211, 4, 55, "Output"]
}, Open  ]],
Cell[129324, 3069, 66006, 1361, 1672, "Text"],
Cell[195333, 4432, 134, 1, 37, "Text"],
Cell[195470, 4435, 5040, 138, 245, "Input"],
Cell[200513, 4575, 134, 1, 37, "Text"],
Cell[200650, 4578, 2082, 62, 119, "Input"],
Cell[202735, 4642, 1229, 48, 39, "Text"],
Cell[203967, 4692, 2180, 58, 161, "Input"],
Cell[206150, 4752, 151, 3, 37, "Text"],
Cell[206304, 4757, 1306, 31, 224, "Input"],
Cell[207613, 4790, 92, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[207730, 4795, 799, 20, 56, "Input"],
Cell[208532, 4817, 640, 12, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209209, 4834, 602, 18, 98, "Input"],
Cell[209814, 4854, 379, 8, 55, "Output"],
Cell[210196, 4864, 171, 3, 55, "Output"],
Cell[210370, 4869, 171, 3, 55, "Output"]
}, Open  ]],
Cell[210556, 4875, 131, 1, 37, "Text"],
Cell[210690, 4878, 797, 17, 39, "Text"],
Cell[211490, 4897, 201, 5, 56, "Input"],
Cell[211694, 4904, 820, 17, 39, "Text"],
Cell[212517, 4923, 224, 6, 56, "Input"],
Cell[212744, 4931, 848, 18, 39, "Text"],
Cell[213595, 4951, 199, 5, 56, "Input"],
Cell[213797, 4958, 893, 18, 39, "Text"],
Cell[214693, 4978, 220, 6, 55, "Input"],
Cell[214916, 4986, 892, 18, 39, "Text"],
Cell[215811, 5006, 203, 5, 56, "Input"],
Cell[216017, 5013, 893, 18, 39, "Text"],
Cell[216913, 5033, 201, 5, 56, "Input"],
Cell[217117, 5040, 895, 18, 39, "Text"],
Cell[218015, 5060, 201, 5, 56, "Input"],
Cell[218219, 5067, 950, 19, 39, "Text"],
Cell[219172, 5088, 224, 5, 55, "Input"],
Cell[219399, 5095, 947, 19, 39, "Text"],
Cell[220349, 5116, 203, 5, 56, "Input"],
Cell[220555, 5123, 948, 19, 39, "Text"],
Cell[221506, 5144, 202, 5, 56, "Input"],
Cell[221711, 5151, 1000, 20, 39, "Text"],
Cell[222714, 5173, 203, 5, 56, "Input"],
Cell[222920, 5180, 1003, 20, 39, "Text"],
Cell[223926, 5202, 201, 5, 55, "Input"],
Cell[224130, 5209, 997, 20, 39, "Text"],
Cell[225130, 5231, 203, 5, 56, "Input"],
Cell[225336, 5238, 998, 20, 39, "Text"],
Cell[226337, 5260, 201, 5, 56, "Input"],
Cell[226541, 5267, 1000, 20, 39, "Text"],
Cell[227544, 5289, 202, 5, 56, "Input"],
Cell[227749, 5296, 987, 19, 39, "Text"],
Cell[228739, 5317, 230, 5, 55, "Input"],
Cell[228972, 5324, 156, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[229153, 5330, 383, 9, 56, "Input"],
Cell[229539, 5341, 142, 2, 55, "Output"]
}, Open  ]],
Cell[229696, 5346, 123, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[229844, 5351, 398, 9, 56, "Input"],
Cell[230245, 5362, 143, 2, 55, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
